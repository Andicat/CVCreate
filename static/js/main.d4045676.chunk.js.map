{"version":3,"sources":["components/utils.js","components/Option.js","redux/cvDataAC.js","components/OptionPanel.js","components/CvElement.js","components/TemplateBlock.js","components/TemplateGroup.js","components/TemplatePanel.js","components/CvBlock.js","components/Transform.js","components/CvDocument.js","components/Loader.js","img/image.svg","components/withDataLoad.js","components/CvLogin.js","components/CV.js","pages/Page_CV.js","components/CvView.js","pages/Page_View.js","components/CvLink.js","pages/Page_Link.js","pages/PagesRouter.js","redux/cvDataReducer.js","redux/reducers.js","App.js","reportWebVitals.js","index.js"],"names":["OPTIONS_TEXT","font","fontsize","bold","italic","underline","uppercase","center","color","bgcolor","file","maincount","addcount","radius","borderwidth","bordercolor","padding","opacity","copy","back","autosize","lock","ungroup","alignTop","alignBottom","alignLeft","alignRight","alignVertical","alignHorisontal","distributeVertical","distributeHorisontal","alignWidth","alignHeight","group","progress","height","width","link","save","FONTS","createOption","optionType","optionValue","cbOnChange","decodeStyle","indexOf","type","className","data-tooltip","onClick","codeButton","Fragment","id","checked","onChange","setValueCheckBox","htmlFor","codeCheckbox","value","setValueInput","codeColor","list","map","f","i","style","fontFamily","codeList","codeNumber","codeRange","name","accept","setImage","min","max","evt","openDrop","target","nextSibling","onMouseLeave","elem","relatedTarget","currentTarget","Object","keys","o","setGroupValue","Number","readOnly","previousSibling","codeGroup","defaultValue","parentNode","codeLink","setValue","Infinity","reader","FileReader","files","onloadend","result","readAsDataURL","groupValue","newGroupValue","mode","classList","contains","add","remove","step","onInput","styleName","replace","createStyle","styles","styleAttr","key","keyDecode","fontSize","fontWeight","fontStyle","textTransform","textDecoration","textAlign","top","left","backgroundColor","borderColor","borderWidth","right","bottom","getAutoSize","element","sizes","clone","cloneNode","document","body","appendChild","position","visibility","boxSizing","scrollHeight","scrollWidth","removeChild","saveFileJSON","data","filename","JSON","stringify","Blob","window","navigator","msSaveOrOpenBlob","a","createElement","url","URL","createObjectURL","href","download","click","setTimeout","revokeObjectURL","readFileJSON","dataRes","readAsText","readFile","Promise","resolve","reject","onload","event","then","parse","saveLocalStorage","lsName","lsData","loadFromLocalStorage","newlsData","localStorage","setItem","ls","getItem","Option","state","tooltip","onChangeValue","props","blockId","optionName","onMouseOver","getAttribute","setState","onMouseOut","optionCode","this","React","PureComponent","defaultProps","CV_BLOCK_ADD","CV_BLOCK_DELETE","CV_BLOCK_MOVE","CV_BLOCK_RESIZE","CV_BLOCK_ACTIVATE","CV_BLOCK_ACTIVATE_MULTI","CV_BLOCK_COPY","CV_BLOCK_SET_SIZE","CV_ELEMENT_ACTIVATE","CV_STYLE_UPDATE","CV_TEXT_UPDATE","CV_BLOCK_SEND_BACK","CV_BLOCKS_ALIGN_TOP","CV_BLOCKS_ALIGN_BOTTOM","CV_BLOCKS_ALIGN_LEFT","CV_BLOCKS_ALIGN_RIGHT","CV_BLOCKS_ALIGN_VERTICAL","CV_BLOCKS_ALIGN_HORISONTAL","CV_BLOCKS_DISTRIBUTE_VERTICAL","CV_BLOCKS_DISTRIBUTE_HORISONTAL","CV_BLOCKS_ALIGN_WIDTH","CV_BLOCKS_ALIGN_HEIGHT","CV_BLOCKS_GROUP","CV_BLOCK_UNGROUP","CV_BLOCK_LOCK","CV_LOAD","CV_INIT","CV_SET_USER","CV_SET_LINK","CV_BLOCK_LINK","TEMPLATE_ADD","TEMPLATE_DELETE","cvBlock_add","block","cvBlock_delete","cvBlock_move","shiftTop","shiftLeft","cvBlock_resize","shiftHeight","shiftWidth","cvBlock_activate","activeElem","cvElement_activate","elementId","cvStyle_update","styleValue","cvElement_textUpdate","textValue","cvBlock_sendBack","cvBlock_copy","cvBlock_setSize","cvBlock_activateMulti","cvBlocks_align","cvBlocks_distribute","cvBlocks_alignSize","cvBlocks_group","cvBlock_ungroup","cvBlock_lock","cv_load","blocks","cv_init","user","templatesData","templatesUser","cv_setUser","cv_setLink","cvBlock_setLink","linkValue","templates_add","templates_delete","index","OptionPanel","BLOCK_ACTION","BLOCKS_ACTION","setStyle","dispatch","setAction","activeBlockDOM","sizesAuto","codeElementOptions","codeBlocksOptions","codePageOptions","blockAction","activeBlocksId","length","activeBlockOptions","push","activeElementId","styleToEdit","sort","s","stylePage","connect","cvData","CvElement","editable","onBlur","textCurr","innerText","text","positionTop","positionLeft","isActive","decodedStyle","direction","elementCode","src","templateImageUrl","alt","data-elem","Array","w","suppressContentEditableWarning","contentEditable","styleProgressBar","maincolor","progressBarCode","styleProgressBg","addcolor","progressBgCode","styleMainDots","margin","borderRadius","mainDotsCode","from","v","styleAddDots","addDotsCode","CvGroupElement","mapStateToProps","elements","e","styleLink","TemplateBlock","onClickAdd","deepCopyBlock","onClickDelete","cv","active","transitionClass","custom","TemplateGroup","cbSelected","Transition","in","unmountOnExit","timeout","enter","exit","stateName","TemplatePanel","activeMenuId","selectMenu","isTemplatesUser","groupsCode","templates","g","CvBlock","blockRef","createRef","ctrlKey","shiftKey","preventDefault","activatedElement","newBlock","current","activeIndex","ref","Transform","resize","offsetTop","offsetLeft","shiftBorder","setPosition","move","mouseStart","x","clientX","y","clientY","addEventListener","onMouseMove","onMouseUp","moveEvt","mouseShift","upEvt","removeEventListener","onMouseDown","onMouseDownSize","CvDocument","cvBlocksCode","b","findIndex","ab","activeBlock","showPanel","Loader","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","saveFirebase","collectionName","docName","collection","doc","set","catch","error","addFirebase","get","exists","merge","loadFirebase","CvLogin","userName","userList","dataloaded","userNameValid","messageError","loadData","saveData","addData","onSubmit","nameValue","String","trim","focus","dataReady","maxLength","placeholder","CV","saveCV","stateToSave","saveLS","loadCV","console","log","activeOneId","find","to","Page_CV","CvView","viewForPrint","createLink","linkName","updateLink","linkCode","withRouter","Page_View","CvLink","loadLink","loadTemplates","match","params","linkname","Page_Link","PagesRouter","path","exact","component","Component","initState","cvDataReducer","action","cvId","setId","parentId","newId","forEach","reduce","r","randomPosition","Math","random","newState","filter","newBlocks","newActiveBlocksId","firstActiveBlock","positionBottom","positionRight","positionCenter","blocksToAlign","minTop","maxTop","totalHeight","slice","distance","minLeft","maxLeft","totalWidth","blocksToGroup","newElements","elemWidth","elemHeight","elemTop","elemLeft","newGroupBlock","blockToUnGroup","sortFunc","copyBlock","blockTemp","updateStyle","newStyleToEdit","updateText","image","newTemplateBlock","t","combinedReducer","combineReducers","store","createStore","App","propName","PagesRouterWithData","ComponentWithDataLoad","combinedProps","loadLS","imageUrl","loadUserTemplates","withDataLoad","basename","process","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d4045676.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst FONT_SIZE_MIN = 6;\r\nconst FONT_SIZE_MAX = 60;\r\nconst PADDING_MIN = 0;\r\nconst PADDING_MAX = 100;\r\n\r\nconst CV_ID = 1.1;\r\n\r\nconst OPTIONS_TEXT = {\r\n    font: 'font',\r\n    fontsize: 'font Size',\r\n    bold: 'font Bold',\r\n    italic: 'font Italic',\r\n    underline: 'font Underline',\r\n    uppercase: 'font Uppercase',\r\n    center: 'align text to Center',\r\n    color: 'color of text',\r\n    bgcolor: 'background color',\r\n    file: 'load image',\r\n    maincount: 'count of first dots',\r\n    addcount: 'count of second dots',\r\n    radius: 'radius of dots',\r\n    borderwidth: 'width of border',\r\n    bordercolor: 'color of border',\r\n    padding: 'padding',\r\n    opacity: 'opacity',\r\n    copy: 'copy block',\r\n    back: 'send block on back',\r\n    autosize: 'set block size on Auto',\r\n    lock: 'lock block position',\r\n    ungroup: 'ungroup blocks',\r\n    alignTop: 'align blocks on top',\r\n    alignBottom: 'align blocks on bottom',\r\n    alignLeft: 'align blocks on left',\r\n    alignRight: 'align blocks on right',\r\n    alignVertical: 'align blocks on vertical',\r\n    alignHorisontal: 'align blocks on horisontal',\r\n    distributeVertical: 'distribute blocks on vertical',\r\n    distributeHorisontal: 'distribute blocks on horisontal',\r\n    alignWidth: 'set same width for blocks',\r\n    alignHeight: 'set same height for blocks',\r\n    group: 'group blocks',\r\n    progress: 'progress',\r\n    height: 'height',\r\n    width: 'width',\r\n    link: 'set link for block',\r\n    save: 'save this block to panel',\r\n}\r\n\r\nconst FONTS = ['PTSans','Roboto','Helvetica','Garamond'];\r\n\r\n/*function debounce(cb) {\r\n    var DEBOUNCE_INTERVAL = 1000;\r\n    var lastTimeout = null;\r\n    return function () {\r\n        var parameters = arguments;\r\n        if (lastTimeout) {\r\n            window.clearTimeout(lastTimeout);\r\n        }\r\n        lastTimeout = window.setTimeout(function () {\r\n            cb.apply(this, parameters);\r\n        }, DEBOUNCE_INTERVAL);\r\n    };\r\n}*/\r\n\r\n//create jsx-code for option\r\nfunction createOption (optionType,optionValue,cbOnChange) {\r\n    optionType = decodeStyle(optionType);\r\n\r\n    if (optionType==='copy' || optionType==='back' || optionType==='autosize' || optionType==='ungroup' || optionType==='group' \r\n                            || optionType==='save'|| optionType.indexOf('align')>=0 || optionType.indexOf('distribute')>=0) {\r\n        return codeButton(optionType,cbOnChange);\r\n    } else if (optionType==='bold' || optionType==='italic' || optionType==='uppercase' || optionType==='underline' || optionType==='center' || optionType==='lock') {\r\n        return codeCheckbox(optionType,optionValue);\r\n    } else if (optionType.indexOf('color')>=0) {\r\n        return codeColor(optionValue);\r\n    } else if (optionType==='font') {\r\n        return codeList(optionValue,FONTS);\r\n    } else if (optionType==='fontsize') {\r\n        return codeNumber(optionValue,FONT_SIZE_MIN,FONT_SIZE_MAX);\r\n    } else if (optionType==='progress') {\r\n        return codeRange(optionType,optionValue,0,100,1);\r\n    } else if (optionType==='file') {\r\n        return codeFile();\r\n    } else if (optionType==='padding') {\r\n        return codeGroup(optionType,optionValue,PADDING_MIN,PADDING_MAX);\r\n    } else if (optionType==='opacity') {\r\n        return codeRange(optionType,optionValue,0,1,0.01);\r\n    } else if (optionType==='link') {\r\n        return codeLink(optionType,optionValue);\r\n    } else if (optionType==='maincount' || optionType==='addcount' || optionType==='radius' || optionType==='borderwidth') {\r\n        return codeNumber(optionValue,0,100);\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n    function setValue(elem,value) {\r\n        if (!elem) return;\r\n        let min = elem.min?Number(elem.min):0;\r\n        let max = elem.max?Number(elem.max):Infinity;\r\n        if (value>=min && value<=max) {\r\n            cbOnChange(value);\r\n            return;\r\n        }\r\n    };\r\n\r\n    function setValueInput(evt) {\r\n        cbOnChange(evt.target.value);\r\n    };\r\n\r\n    function setValueCheckBox(evt) {\r\n        cbOnChange(evt.target.checked);\r\n    };\r\n\r\n    function setImage(evt) {\r\n        const reader = new FileReader();\r\n        const file = evt.target.files[0];\r\n\r\n        reader.onloadend = () => {\r\n            cbOnChange(reader.result);\r\n        };\r\n\r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    function setLink(elem) {\r\n        cbOnChange(elem.value);\r\n        openDrop(elem.parentNode.parentNode,false);\r\n    };\r\n    \r\n    function setGroupValue(elem,value,groupValue,name) {\r\n        if (!elem) return;\r\n        let min = elem.min?Number(elem.min):0;\r\n        let max = elem.max?Number(elem.max):Infinity;\r\n        if (value>=min && value<=max) {\r\n            let newGroupValue = {...groupValue};\r\n            newGroupValue[name] = value;\r\n            cbOnChange(newGroupValue);\r\n            return;\r\n        }\r\n    };\r\n\r\n    function openDrop(elem, mode) {\r\n        //debugger\r\n        if (mode && !elem.classList.contains('option__drop-down--show')) {\r\n            elem.classList.add('option__drop-down--show');\r\n            //console.log('open');\r\n        }\r\n        if (!mode) {\r\n            elem.classList.remove('option__drop-down--show');\r\n            //console.log('close');\r\n        }\r\n        \r\n    };\r\n\r\n    function onMouseLeave(evt,elem) {\r\n        if (evt.relatedTarget!==elem) {\r\n            openDrop(elem,false);\r\n        }\r\n    }\r\n\r\n    function codeNumber(optionValue,min,max) {\r\n        return <React.Fragment>\r\n                    <input type='button' className='option__button option__button--left' data-tooltip={true} value='&ndash;' onClick= {(evt) => {setValue(evt.target.nextSibling,Number(optionValue)-1)}}/>\r\n                    <input type='text' className='option__number' data-tooltip={true} min={min} max={max} value={optionValue} readOnly></input>\r\n                    <input type='button' className='option__button option__button--right' data-tooltip={true} value='+' onClick= {(evt) => {setValue(evt.target.previousSibling,Number(optionValue)+1)}}/>\r\n                </React.Fragment>\r\n    };\r\n\r\n    function codeRange(optionType,optionValue,min,max,step) {\r\n        return <React.Fragment>\r\n                    <input type='button' className={'option__button option__down option__button--' + optionType} data-tooltip={true} onClick= {(evt) => {openDrop(evt.target.nextSibling,true)}}/>\r\n                    <div className='option__drop-down' onMouseLeave={(evt) => openDrop(evt.currentTarget,false)}>\r\n                        <div className='option__drop-down-line'>\r\n                            <input type=\"range\" className='option__range'min={min} max={max} step={step} value={optionValue} onInput={setValueInput}/>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>\r\n    };\r\n\r\n    function codeCheckbox(optionType,optionValue) {\r\n        return <React.Fragment>\r\n                    <input type='checkbox' className={'option__checkbox option__checkbox--' + optionType} id={optionType} checked={optionValue} onChange={setValueCheckBox}/>\r\n                    <label className='option__label' htmlFor={optionType} data-tooltip={true}/>\r\n                </React.Fragment>\r\n    };\r\n\r\n    function codeColor(optionValue) {\r\n        return <input type='color' className='option__color' data-tooltip={true} value={optionValue} onChange={setValueInput}></input>\r\n    }\r\n\r\n    function codeFile() {\r\n        return <React.Fragment>\r\n                    <input type='file' name='file' id='file' className='option__file' accept='image/*' onChange={setImage}></input>\r\n                    <label className='option__label option__label--file' htmlFor='file' data-tooltip={true}>Load Image</label>\r\n                </React.Fragment>\r\n    };\r\n\r\n    function codeLink(optionType,optionValue) {\r\n        return <React.Fragment>\r\n                    <input type='button' className={'option__button option__down option__button--' + optionType} data-tooltip={true} onClick={(evt) => {openDrop(evt.target.nextSibling,true)}}/>\r\n                    <div className='option__drop-down' onMouseLeave={(evt) => openDrop(evt.currentTarget,false)}>\r\n                        <div className='option__drop-down-line'>\r\n                            <span>Link:</span>\r\n                            <input type=\"text\" className='option__text option__link' defaultValue={optionValue}/>\r\n                            <button className='option__button option__button--ok' onClick={(evt) => {setLink(evt.target.previousSibling)}}/>\r\n                        </div>\r\n                    </div>\r\n                </React.Fragment>   \r\n    };\r\n\r\n    function codeButton(optionType,cbOnChange) {\r\n        \r\n        return <input type='button' className={'option__button option__button--' + optionType} data-tooltip={true} onClick={cbOnChange}/>;\r\n    };\r\n\r\n    function codeList(optionValue,list) {\r\n        return (<select className='option__select' data-tooltip={true} value={optionValue} onChange={setValueInput}>\r\n                    {list.map( (f,i) => {\r\n                        let style = {fontFamily:f};\r\n                        return <option key={i} style={style}>{f}</option>;\r\n                        })\r\n                    }\r\n                </select>);\r\n    };\r\n\r\n    function codeGroup(optionType,optionValue,min,max) {\r\n        return <React.Fragment>\r\n                    <input type='button' className={'option__button option__down option__button--' + optionType} data-tooltip={true} onClick={(evt) => {openDrop(evt.target.nextSibling,true)}} onMouseLeave={(evt) => onMouseLeave(evt,evt.currentTarget.nextSibling)}/>\r\n                    <form name={optionType} className='option__drop-down' onMouseLeave={(evt) => openDrop(evt.currentTarget,false)}>\r\n                        {Object.keys(optionValue).map((o,i) => {\r\n                            return <div key={i} className='option__drop-down-line'>\r\n                                        <span>{o}</span>\r\n                                        <input type='button' className='option__button option__button--left' value='&ndash;' onClick= {(evt) => {setGroupValue(evt.target.nextSibling,Number(optionValue[o])-1,optionValue,o)}}/>\r\n                                        <input type='text' className='option__number' min={min} max={max} value={optionValue[o]} readOnly></input>\r\n                                        <input type='button' className='option__button option__button--right' value='+' onClick= {(evt) => {setGroupValue(evt.target.previousSibling,Number(optionValue[o])+1,optionValue,o)}}/>\r\n                                    </div>\r\n                        })}\r\n                    </form>\r\n                </React.Fragment>   \r\n    };\r\n};\r\n\r\nfunction decodeStyle(styleName) {\r\n    //debugger\r\n    return styleName.replace(/.+_/,'');\r\n}\r\n\r\n// create style for DOM-element\r\nfunction createStyle (styles) {\r\n    let styleAttr = {};\r\n    //debugger\r\n    for (let key in styles) {\r\n        let keyDecode = decodeStyle(key);\r\n        switch (keyDecode) {\r\n            case 'font': \r\n                styleAttr.fontFamily = styles[key];\r\n                break;\r\n            case 'fontsize': \r\n                styleAttr.fontSize = styles[key] + 'px';\r\n                break;\r\n            case 'bold':\r\n                styleAttr.fontWeight = styles[key]?'bold':'normal';\r\n                break;\r\n            case 'italic':\r\n                styleAttr.fontStyle = styles[key]?'italic':'normal';\r\n                break;\r\n            case 'uppercase':\r\n                styleAttr.textTransform = styles[key]?'uppercase':'none';\r\n                break;\r\n            case 'underline':\r\n                styleAttr.textDecoration = styles[key]?'underline':'none';\r\n                break;\r\n            case 'center':\r\n                styleAttr.textAlign = styles[key]?'center':'start';\r\n                break;\r\n            case 'top': \r\n                styleAttr.top = styles[key] + 'px';\r\n                break;\r\n            case 'left': \r\n                styleAttr.left = styles[key] + 'px';\r\n                break;\r\n            case 'bgcolor': \r\n                styleAttr.backgroundColor = styles[key];\r\n                break;\r\n            case 'bordercolor': \r\n                styleAttr.borderColor = styles[key];\r\n                break;\r\n            case 'borderwidth': \r\n                styleAttr.borderWidth = styles[key] + 'px';\r\n                break;\r\n            case 'padding':\r\n                styleAttr.padding = styles[key].top + 'px ' + styles[key].right + 'px ' + styles[key].bottom + 'px ' + styles[key].left + 'px';\r\n                break;\r\n            default:\r\n                styleAttr[keyDecode] = styles[key];\r\n        }\r\n    }\r\n    return styleAttr;\r\n};\r\n\r\n// get auto size for DOM-element\r\nfunction getAutoSize (element) {\r\n    let sizes = {};\r\n    let clone = element.cloneNode(true);\r\n    document.body.appendChild(clone);\r\n    clone.style.position = 'absolute';\r\n    clone.style.visibility = 'hidden';\r\n    clone.style.height = 'auto';\r\n    clone.style.width = 'auto';\r\n    clone.style.boxSizing = 'border-box';\r\n    sizes.height = clone.scrollHeight;\r\n    sizes.width = clone.scrollWidth;\r\n    document.body.removeChild(clone);\r\n    return sizes;\r\n};\r\n\r\nfunction saveFileJSON (data, filename, type) {\r\n    data = JSON.stringify(data);\r\n    var file = new Blob([data], {type: type});\r\n    if (window.navigator.msSaveOrOpenBlob) // IE10+\r\n        window.navigator.msSaveOrOpenBlob(file, filename);\r\n    else { // Others\r\n        var a = document.createElement(\"a\"),\r\n                url = URL.createObjectURL(file);\r\n        a.href = url;\r\n        a.download = filename;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        setTimeout(function() {\r\n            document.body.removeChild(a);\r\n            window.URL.revokeObjectURL(url);  \r\n        }, 0); \r\n    }\r\n};\r\n\r\nasync function readFileJSON(file) {\r\n    const reader = new FileReader();\r\n    let dataRes = {};\r\n    reader.readAsText(file);\r\n    const readFile = new Promise((resolve, reject) => {\r\n        reader.onload = function(event) {\r\n        resolve(reader.result)\r\n        }\r\n    });\r\n    await readFile.then((data) => {\r\n        dataRes = JSON.parse(data); \r\n    });\r\n    return dataRes;\r\n}\r\n\r\n/*function decodeStyle(block) {\r\n    //debugger\r\n    if (block.style) {\r\n        let newStyle = {};\r\n        for (let key in block.style) {\r\n            let newStyleName = decodeStyle(key);\r\n            newStyle[newStyleName] = block.style[key];\r\n        }\r\n        block.style = newStyle;\r\n    }\r\n    //block.style[action.styleName] = action.styleValue;\r\n    //block.style = {...block.style};\r\n    if (block.elements) {\r\n        block.elements = block.elements.map(e => decodeStyle(e));\r\n        return {...block};\r\n    }\r\n    return block;\r\n}*/\r\n/*\r\nfunction readFileJSON (file,cbOnLoad) {\r\n\r\n    var readFile= new Promise( (resolve) => {\r\n        var lsData = loadFromLocalStorage('CV');\r\n        resolve(lsData);\r\n    });\r\n    await loadLS.then((data) => {\r\n        if (data) {\r\n            blocks = data.blocks;\r\n            style = data.style;\r\n            user = data.user;\r\n        } \r\n    });\r\n\r\n\r\n\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = function() {\r\n        cbOnLoad(JSON.parse(reader.result));\r\n    };\r\n    \r\n    reader.onerror = function() {\r\n        alert(reader.error);\r\n    };\r\n\r\n    if (file) {\r\n        reader.readAsText(file);\r\n    }\r\n};\r\n*/\r\n//localStorge\r\nfunction saveLocalStorage(lsName,data) {\r\n    let lsData = loadFromLocalStorage(lsName);\r\n    let newlsData = {...lsData,...data};\r\n    localStorage.setItem(lsName,JSON.stringify(newlsData));\r\n}\r\n\r\nfunction loadFromLocalStorage(lsName) {\r\n    var ls = localStorage.getItem(lsName);\r\n    if (ls) {\r\n        return JSON.parse(ls);\r\n    }    \r\n}\r\n   \r\n//image\r\n/*let storage = firebase.storage();\r\n            /*let loadImage = new Promise((resolve) => {\r\n                loadStorage('images/image.svg',resolve);\r\n            });\r\n            await loadImage.then((data) => {\r\n                loadData.image = data;\r\n            });*/\r\n\r\n            /*\r\n            \r\n//load from storage\r\nasync function loadStorage(path,resolve) {\r\n    const storageRef = storage.ref();\r\n    storageRef.child(path).getDownloadURL()\r\n        .then((url) => {\r\n            // This can be downloaded directly:\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.responseType = 'blob';\r\n            xhr.onload = (event) => {\r\n                var blob = xhr.response;\r\n            };\r\n            xhr.open('GET', url);\r\n            xhr.send();\r\n            \r\n            resolve(url);\r\n        })\r\n        .catch((error) => {\r\n        });\r\n} */\r\n\r\nexport {createOption, createStyle, getAutoSize, saveFileJSON, readFileJSON, saveLocalStorage, loadFromLocalStorage, decodeStyle, CV_ID, OPTIONS_TEXT};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {createOption, OPTIONS_TEXT} from './utils';\r\n\r\nclass Option extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        blockId: PropTypes.number.isRequired,\r\n        optionName: PropTypes.string,\r\n        optionValue: PropTypes.any,\r\n        cbOnChange: PropTypes.func.isRequired,\r\n    };\r\n\r\n    static defaultProps = {\r\n        blockId: 0,\r\n    };\r\n\r\n    state = {\r\n        tooltip: null,\r\n    }\r\n\r\n    onChangeValue = (value) => {\r\n        this.props.cbOnChange(this.props.blockId,this.props.optionName,value);\r\n    }\r\n\r\n    //delayedCallback = debounce(function (event) {\r\n    //    event();\r\n    //});\r\n\r\n    //setTooltip = (text) => {\r\n        //this.setState({tooltip:text});\r\n        //this.delayedCallback(() => this.setState({tooltip:text}));\r\n    //}\r\n\r\n    onMouseOver = (evt) => {\r\n        //console.log(evt.target.getAttribute('data-tooltip'));\r\n        if (evt.target.getAttribute('data-tooltip')) {\r\n            //this.delayedCallback(() => this.setState({tooltip:OPTIONS_TEXT[this.props.optionName]}));\r\n            this.setState({tooltip:OPTIONS_TEXT[this.props.optionName]});\r\n        }\r\n    }\r\n\r\n    onMouseOut = () => {\r\n        this.setState({tooltip:null});\r\n    }\r\n\r\n     render () {\r\n        \r\n        let optionCode = createOption(this.props.optionName,this.props.optionValue,this.onChangeValue);\r\n        if (!optionCode) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className='option' onMouseOver={this.onMouseOver} onMouseOut={this.onMouseOut} onClick={this.onMouseOut}>\r\n                {optionCode}\r\n                {this.state.tooltip && \r\n                    <span className='option__tooltip'>{this.state.tooltip}</span>\r\n                }\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Option;\r\n","const CV_BLOCK_ADD = 'CV_BLOCK_ADD';\r\nconst CV_BLOCK_DELETE = 'CV_BLOCK_DELETE';\r\nconst CV_BLOCK_MOVE = 'CV_BLOCK_MOVE';\r\nconst CV_BLOCK_RESIZE = 'CV_BLOCK_RESIZE';\r\nconst CV_BLOCK_ACTIVATE = 'CV_BLOCK_ACTIVATE';\r\nconst CV_BLOCK_ACTIVATE_MULTI = 'CV_BLOCK_ACTIVATE_MULTI';\r\nconst CV_BLOCK_COPY = 'CV_BLOCK_COPY';\r\nconst CV_BLOCK_SET_SIZE = 'CV_BLOCK_SET_SIZE';\r\nconst CV_ELEMENT_ACTIVATE = 'CV_ELEMENT_ACTIVATE';\r\nconst CV_STYLE_UPDATE = 'CV_STYLE_UPDATE';\r\nconst CV_TEXT_UPDATE = 'CV_TEXT_UPDATE';\r\nconst CV_BLOCK_SEND_BACK = 'CV_BLOCK_SEND_BACK';\r\nconst CV_BLOCKS_ALIGN_TOP = 'CV_BLOCKS_ALIGN_TOP';\r\nconst CV_BLOCKS_ALIGN_BOTTOM = 'CV_BLOCKS_ALIGN_BOTTOM';\r\nconst CV_BLOCKS_ALIGN_LEFT = 'CV_BLOCKS_ALIGN_LEFT';\r\nconst CV_BLOCKS_ALIGN_RIGHT = 'CV_BLOCKS_ALIGN_RIGHT';\r\nconst CV_BLOCKS_ALIGN_VERTICAL = 'CV_BLOCKS_ALIGN_VERTICAL';\r\nconst CV_BLOCKS_ALIGN_HORISONTAL = 'CV_BLOCKS_ALIGN_HORISONTAL';\r\nconst CV_BLOCKS_DISTRIBUTE_VERTICAL = 'CV_BLOCKS_DISTRIBUTE_VERTICAL';\r\nconst CV_BLOCKS_DISTRIBUTE_HORISONTAL = 'CV_BLOCKS_DISTRIBUTE_HORISONTAL';\r\nconst CV_BLOCKS_ALIGN_WIDTH = 'CV_BLOCKS_ALIGN_WIDTH';\r\nconst CV_BLOCKS_ALIGN_HEIGHT = 'CV_BLOCKS_ALIGN_HEIGHT';\r\nconst CV_BLOCKS_GROUP = 'CV_BLOCKS_GROUP';\r\nconst CV_BLOCK_UNGROUP = 'CV_BLOCK_UNGROUP';\r\nconst CV_BLOCK_LOCK = 'CV_BLOCK_LOCK';\r\nconst CV_LOAD = 'CV_LOAD';\r\nconst CV_INIT = 'CV_INIT';\r\nconst CV_SET_USER = 'CV_SET_USER';\r\nconst CV_SET_LINK = 'CV_SET_LINK';\r\nconst CV_BLOCK_LINK = 'CV_BLOCK_LINK';\r\nconst TEMPLATE_ADD = 'TEMPLATE_ADD';\r\nconst TEMPLATE_DELETE = 'TEMPLATE_DELETE';\r\n\r\nconst cvBlock_add = function(block) {\r\n    return {\r\n        type: CV_BLOCK_ADD,\r\n        block:block,\r\n    };\r\n}\r\n\r\nconst cvBlock_delete = function(blockId) {\r\n    return {\r\n        type: CV_BLOCK_DELETE,\r\n        blockId:blockId,\r\n    };\r\n}\r\n\r\nconst cvBlock_move = function(blockId,shiftTop,shiftLeft) {\r\n    return {\r\n        type: CV_BLOCK_MOVE,\r\n        blockId:blockId,\r\n        shiftTop: shiftTop,\r\n        shiftLeft: shiftLeft,\r\n    };\r\n}\r\n\r\nconst cvBlock_resize = function(blockId,shiftHeight,shiftWidth) {\r\n    return {\r\n        type: CV_BLOCK_RESIZE,\r\n        blockId:blockId,\r\n        shiftHeight: shiftHeight,\r\n        shiftWidth: shiftWidth,\r\n    };\r\n}\r\n\r\nconst cvBlock_activate = function(blockId,target,activeElem) {\r\n    return {\r\n        type: CV_BLOCK_ACTIVATE,\r\n        blockId:blockId,\r\n        target:target,\r\n        activeElem:activeElem,\r\n    };\r\n}\r\n\r\nconst cvElement_activate = function(style,elementId) {\r\n    return {\r\n        type: CV_ELEMENT_ACTIVATE,\r\n        elementId:elementId,\r\n        style:style,\r\n    };\r\n}\r\n\r\nconst cvStyle_update = function(blockId,styleName,styleValue) {\r\n    return {\r\n        type: CV_STYLE_UPDATE,\r\n        blockId: blockId,\r\n        styleName: styleName,\r\n        styleValue: styleValue,\r\n    };\r\n}\r\n\r\nconst cvElement_textUpdate = function(blockId,textValue) {\r\n    return {\r\n        type: CV_TEXT_UPDATE,\r\n        blockId: blockId,\r\n        textValue: textValue,\r\n    };\r\n}\r\n\r\nconst cvBlock_sendBack = function(blockId) {\r\n    return {\r\n        type: CV_BLOCK_SEND_BACK,\r\n        blockId: blockId,\r\n    };\r\n}\r\n\r\nconst cvBlock_copy = function(blockId) {\r\n    return {\r\n        type: CV_BLOCK_COPY,\r\n        blockId: blockId,\r\n    };\r\n}\r\n\r\nconst cvBlock_setSize = function(blockId,height,width) {\r\n    return {\r\n        type: CV_BLOCK_SET_SIZE,\r\n        blockId: blockId,\r\n        width:width,\r\n        height:height,\r\n    };\r\n}\r\n\r\nconst cvBlock_activateMulti = function(blockId) {\r\n    return {\r\n        type: CV_BLOCK_ACTIVATE_MULTI,\r\n        blockId: blockId,\r\n    };\r\n}\r\n\r\nconst cvBlocks_align = function(mode) {\r\n    switch (mode) {\r\n        case 'top':\r\n            return { type: CV_BLOCKS_ALIGN_TOP };\r\n        case 'bottom':\r\n            return { type: CV_BLOCKS_ALIGN_BOTTOM };\r\n        case 'left':\r\n            return { type: CV_BLOCKS_ALIGN_LEFT };\r\n        case 'right':\r\n            return { type: CV_BLOCKS_ALIGN_RIGHT };\r\n        case 'vertical':\r\n            return { type: CV_BLOCKS_ALIGN_VERTICAL };\r\n        case 'horisontal':\r\n            return { type: CV_BLOCKS_ALIGN_HORISONTAL };\r\n        default:\r\n    }\r\n}\r\n\r\nconst cvBlocks_distribute = function(mode) {\r\n    switch (mode) {\r\n        case 'vertical':\r\n            return { type: CV_BLOCKS_DISTRIBUTE_VERTICAL };\r\n        case 'horisontal':\r\n            return { type: CV_BLOCKS_DISTRIBUTE_HORISONTAL };\r\n        default:\r\n    }\r\n}\r\n\r\nconst cvBlocks_alignSize = function(mode) {\r\n    switch (mode) {\r\n        case 'width':\r\n            return { type: CV_BLOCKS_ALIGN_WIDTH };\r\n        case 'height':\r\n            return { type: CV_BLOCKS_ALIGN_HEIGHT };\r\n        default:\r\n    }\r\n}\r\n\r\nconst cvBlocks_group = function() {\r\n    return { type: CV_BLOCKS_GROUP };\r\n}\r\n\r\nconst cvBlock_ungroup = function(blockId) {\r\n    return { \r\n        type: CV_BLOCK_UNGROUP,\r\n        blockId: blockId,\r\n    };\r\n}\r\n\r\nconst cvBlock_lock = function(blockId) {\r\n    return { \r\n        type: CV_BLOCK_LOCK,\r\n        blockId: blockId,\r\n    };\r\n}\r\n\r\nconst cv_load = function(blocks,style) {\r\n    return { \r\n        type: CV_LOAD,\r\n        blocks:blocks,\r\n        style:style,\r\n    };\r\n}\r\n\r\nconst cv_init = function(blocks,style,user,link,templatesData,templatesUser) {\r\n    return { \r\n        type: CV_INIT,\r\n        blocks:blocks,\r\n        style:style,\r\n        user:user,\r\n        link:link,\r\n        templatesData:templatesData,\r\n        templatesUser:templatesUser,\r\n    };\r\n}\r\n\r\nconst cv_setUser = function(user) {\r\n    return { \r\n        type: CV_SET_USER,\r\n        user:user,\r\n    };\r\n}\r\n\r\nconst cv_setLink = function(link) {\r\n    return { \r\n        type: CV_SET_LINK,\r\n        link:link,\r\n    };\r\n}\r\n\r\nconst cvBlock_setLink = function(blockId,linkValue) {\r\n    return { \r\n        type: CV_BLOCK_LINK,\r\n        blockId:blockId,\r\n        linkValue:linkValue,\r\n    };\r\n}\r\n\r\nconst templates_add = function(blockId) {\r\n    return {\r\n        type: TEMPLATE_ADD,\r\n        blockId: blockId,\r\n    };\r\n}\r\n\r\nconst templates_delete = function(index) {\r\n    return {\r\n        type: TEMPLATE_DELETE,\r\n        index: index,\r\n    };\r\n}\r\n\r\nexport {\r\n    cvBlock_add, CV_BLOCK_ADD,\r\n    cvBlock_delete, CV_BLOCK_DELETE,\r\n    cvBlock_move, CV_BLOCK_MOVE,\r\n    cvBlock_resize, CV_BLOCK_RESIZE,\r\n    cvBlock_activate, CV_BLOCK_ACTIVATE,\r\n    cvBlock_activateMulti, CV_BLOCK_ACTIVATE_MULTI,\r\n    cvBlock_sendBack, CV_BLOCK_SEND_BACK,\r\n    cvBlock_copy, CV_BLOCK_COPY,\r\n    cvBlock_setSize, CV_BLOCK_SET_SIZE,\r\n    cvBlock_lock, CV_BLOCK_LOCK,\r\n    cvBlock_setLink, CV_BLOCK_LINK,\r\n    cvBlocks_align, CV_BLOCKS_ALIGN_TOP, CV_BLOCKS_ALIGN_BOTTOM, CV_BLOCKS_ALIGN_LEFT, CV_BLOCKS_ALIGN_RIGHT, CV_BLOCKS_ALIGN_VERTICAL, CV_BLOCKS_ALIGN_HORISONTAL,\r\n    cvBlocks_distribute, CV_BLOCKS_DISTRIBUTE_VERTICAL, CV_BLOCKS_DISTRIBUTE_HORISONTAL,\r\n    cvBlocks_alignSize, CV_BLOCKS_ALIGN_WIDTH, CV_BLOCKS_ALIGN_HEIGHT,\r\n    cvBlocks_group, CV_BLOCKS_GROUP, \r\n    cvBlock_ungroup, CV_BLOCK_UNGROUP,\r\n    cvElement_activate, CV_ELEMENT_ACTIVATE,\r\n    cvStyle_update, CV_STYLE_UPDATE,\r\n    cvElement_textUpdate, CV_TEXT_UPDATE,\r\n    cv_load, CV_LOAD,\r\n    cv_init, CV_INIT, \r\n    cv_setUser, CV_SET_USER,\r\n    cv_setLink, CV_SET_LINK,\r\n    templates_add, TEMPLATE_ADD,\r\n    templates_delete, TEMPLATE_DELETE\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Option from './Option';\r\nimport {CV_ID} from './utils';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {cvStyle_update,\r\n    cvBlock_sendBack,\r\n    cvBlock_copy,\r\n    cvBlock_setSize,\r\n    cvBlocks_align,\r\n    cvBlocks_alignSize,\r\n    cvBlocks_distribute,\r\n    cvBlocks_group,\r\n    cvBlock_ungroup, \r\n    cvBlock_lock,\r\n    cvBlock_setLink,\r\n    templates_add } from '../redux/cvDataAC';\r\nimport {getAutoSize} from './utils';\r\n\r\nclass OptionPanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        styleToEdit: PropTypes.object,\r\n        activeElementId: PropTypes.string,\r\n        activeBlockOptions: PropTypes.object,\r\n        activeBlocksId: PropTypes.array,    \r\n        activeBlockDOM: PropTypes.object, \r\n        stylePage: PropTypes.object,   \r\n    };\r\n\r\n    BLOCK_ACTION = [\r\n        'lock',\r\n        'autosize',\r\n        'back',\r\n        'copy',\r\n        'link',\r\n        'save',\r\n    ];\r\n\r\n    BLOCKS_ACTION = [\r\n        'alignTop',\r\n        'alignBottom',\r\n        'alignLeft',\r\n        'alignRight',\r\n        'alignVertical',\r\n        'alignHorisontal',\r\n        'distributeVertical',\r\n        'distributeHorisontal',\r\n        'alignWidth',\r\n        'alignHeight',\r\n        'group',\r\n    ];\r\n\r\n    setStyle = (blockId,optionName,value) => {\r\n        this.props.dispatch(cvStyle_update(blockId,optionName,value));\r\n    }\r\n\r\n    setAction = (blockId,optionName,value) => {\r\n        switch (optionName) {\r\n            case 'alignTop': {\r\n                this.props.dispatch(cvBlocks_align('top'));\r\n                break;\r\n            }\r\n            case 'alignBottom': {\r\n                this.props.dispatch(cvBlocks_align('bottom'));\r\n                break;\r\n            }\r\n            case 'alignLeft': {\r\n                this.props.dispatch(cvBlocks_align('left'));\r\n                break;\r\n            }\r\n            case 'alignRight': {\r\n                this.props.dispatch(cvBlocks_align('right'));\r\n                break;\r\n            }\r\n            case 'alignVertical': {\r\n                this.props.dispatch(cvBlocks_align('vertical'));\r\n                break;\r\n            }\r\n            case 'alignHorisontal': {\r\n                this.props.dispatch(cvBlocks_align('horisontal'));\r\n                break;\r\n            }\r\n            case 'distributeVertical': {\r\n                this.props.dispatch(cvBlocks_distribute('vertical'));\r\n                break;\r\n            }\r\n            case 'distributeHorisontal': {\r\n                this.props.dispatch(cvBlocks_distribute('horisontal'));\r\n                break;\r\n            }\r\n            case 'alignWidth': {\r\n                this.props.dispatch(cvBlocks_alignSize('width'));\r\n                break;\r\n            }\r\n            case 'alignHeight': {\r\n                this.props.dispatch(cvBlocks_alignSize('height'));\r\n                 break;\r\n            }\r\n            case 'group': {\r\n                this.props.dispatch(cvBlocks_group());\r\n                this.setState({tooltip:null});\r\n                break;\r\n            }\r\n            case 'lock': {\r\n                this.props.dispatch(cvBlock_lock(blockId));\r\n                break;\r\n            }\r\n            case 'autosize': {\r\n                if (this.props.activeBlockDOM) {\r\n                    let sizesAuto = getAutoSize(this.props.activeBlockDOM);\r\n                    this.props.dispatch(cvBlock_setSize(blockId,sizesAuto.height,sizesAuto.width));            \r\n                }\r\n                break;\r\n            }\r\n            case 'back': {\r\n                this.props.dispatch(cvBlock_sendBack(blockId));\r\n                this.setState({tooltip:null});\r\n                break;\r\n            }\r\n            case 'copy': {\r\n                this.props.dispatch(cvBlock_copy(blockId));\r\n                this.setState({tooltip:null});\r\n                break;\r\n            }\r\n            case 'ungroup': {\r\n                this.props.dispatch(cvBlock_ungroup(blockId));\r\n                this.setState({tooltip:null});\r\n                break;\r\n            }\r\n            case 'link': {\r\n                this.props.dispatch(cvBlock_setLink(blockId,value));\r\n                break;\r\n            }\r\n            case 'save': {\r\n                this.props.dispatch(templates_add(blockId));\r\n                break;\r\n            }\r\n            default:\r\n                //console.log('action', optionName, value);\r\n                return;\r\n        }\r\n    }\r\n\r\n    render () {\r\n        //debugger\r\n        //console.log('render option panel', this.props);\r\n        let codeElementOptions = null;\r\n        let codeBlockOptions = null;\r\n        let codeBlocksOptions = null;\r\n        let codePageOptions = null;\r\n        let blockAction = [...this.BLOCK_ACTION];\r\n        \r\n        if (this.props.activeBlocksId.length > 1) { //few active blocks\r\n            codeBlocksOptions = this.BLOCKS_ACTION.map( (a,i) => (\r\n                <Option key={i} optionName={a} cbOnChange={this.setAction}/>));\r\n        } else if (this.props.activeBlockOptions) { //one active block\r\n            if (this.props.activeBlockOptions.group) {\r\n                blockAction.push('ungroup');\r\n            } else {\r\n               // blockAction.push('autosize');\r\n            }\r\n            codeBlocksOptions = blockAction.map( (a,i) => {\r\n                let value = null;\r\n                if (a==='lock') {\r\n                    value = !!this.props.activeBlockOptions.lock;\r\n                } else if (a==='link') {\r\n                    value = this.props.activeBlockOptions.link;\r\n                }\r\n                return <Option key={'block-' + i} optionName={a} optionValue={value} blockId={this.props.activeBlockOptions.id} cbOnChange={this.setAction}/>;\r\n            });\r\n            if (this.props.activeElementId) { //active element\r\n                \r\n                let styles = Object.keys(this.props.styleToEdit).sort();\r\n                codeElementOptions = styles.map( (s,i) => (\r\n                    <Option key={'option-' + i} optionName={s} optionValue={this.props.styleToEdit[s]} blockId={this.props.activeBlockOptions.id} cbOnChange={this.setStyle}/>));\r\n            };\r\n        } else if (this.props.stylePage) { //non active block, but active page\r\n            let styles = Object.keys(this.props.stylePage).sort();\r\n            codePageOptions = styles.map( (s,i) => (\r\n                <Option key={i} optionName={s} optionValue={this.props.stylePage[s]} blockId={CV_ID} cbOnChange={this.setStyle}/>));\r\n        }\r\n        return (\r\n            <div className='option-panel'>\r\n                {((codePageOptions && !codeBlocksOptions) || codeElementOptions) && \r\n                    <div className='option-panel__group option-panel__group--style'>\r\n                        {codePageOptions}\r\n                        {codeElementOptions}\r\n                    </div>\r\n                }\r\n                {codeBlocksOptions && \r\n                    <div className='option-panel__group option-panel__group--blocks'>\r\n                        {codeBlocksOptions}\r\n                    </div>\r\n                }\r\n                {codeBlockOptions && \r\n                    <div className='option-panel__group option-panel__group--block'>\r\n                        {codeBlockOptions}\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        stylePage: state.cvData.stylePage,\r\n        styleToEdit: state.cvData.styleToEdit,\r\n        activeElementId: state.cvData.activeElementId,\r\n        activeBlocksId: state.cvData.activeBlocksId,\r\n        activeBlockDOM: state.cvData.activeBlockDOM,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(OptionPanel);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {cvElement_activate, cvElement_textUpdate} from '../redux/cvDataAC';\r\nimport {createStyle, decodeStyle} from './utils';\r\n\r\nclass CvElement extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        editable: PropTypes.bool,\r\n        id: PropTypes.string.isRequired,\r\n        blockId: PropTypes.number.isRequired,\r\n        data: PropTypes.object,\r\n        activeElementId: PropTypes.string,\r\n        templateImageUrl: PropTypes.string,\r\n    };\r\n\r\n    static defaultProps = {\r\n        style: {},\r\n    };\r\n\r\n    onClick = () => {\r\n        if (this.props.editable) {\r\n            this.props.dispatch(cvElement_activate(this.props.data.style,this.props.id));\r\n        }\r\n    }\r\n\r\n    onBlur = (evt) => {\r\n        let textCurr = evt.target.innerText;\r\n        if (this.props.data.text!==textCurr) {\r\n            this.props.dispatch(cvElement_textUpdate(this.props.blockId,textCurr));\r\n        }\r\n    }\r\n\r\n    render () {\r\n        //console.log('render element', this.props.data.id + \" \" + this.props.data.type + \" \" + this.props.data.text);\r\n        let isActive = (this.props.activeElementId===this.props.id);\r\n        let style = createStyle(this.props.data.style);\r\n        let positionTop;\r\n        let positionLeft;\r\n        let position;\r\n        if (this.props.data.link) {\r\n            positionTop = style.top?style.top:(this.props.data.positionTop + 'px');\r\n            positionLeft = style.left?style.left:(this.props.data.positionLeft + 'px');\r\n            position = style.position;\r\n            delete style.top;\r\n            delete style.left;\r\n            delete style.position;\r\n        }\r\n        let type = this.props.data.type;\r\n        let className = 'cv__element cv__element--' + type + (isActive?' cv__element--active':'') + (this.props.data.direction?(' cv__element--' + type + '-' + this.props.data.direction):'');\r\n        let elementCode = null;\r\n        let decodedStyle;\r\n        switch (type) {\r\n            case 'image':\r\n                let src = (this.props.data.style['file']) || this.props.templateImageUrl;\r\n                elementCode = <img className={className} src={src} style={style} alt='' data-elem={true} onClick={this.onClick}/>;\r\n                break;\r\n            case 'text':\r\n                let text = this.props.data.text;\r\n                if (text instanceof Array) {\r\n                    text = text.map( (w,i) => <span key={i}>{w}{i<text.length-1&&<br/>}</span>);\r\n                }\r\n                elementCode = <span className={className} style={style} suppressContentEditableWarning={this.props.editable} contentEditable={this.props.editable} data-elem={true} onClick={this.onClick} onBlur={this.onBlur}>\r\n                                {text}\r\n                              </span>;\r\n                break;\r\n            case 'figure':\r\n                elementCode = <div className={className} style={style} data-elem={true} onClick={this.onClick}></div>;;\r\n                break;\r\n            case 'progress':\r\n                decodedStyle = {};\r\n                for (let s in this.props.data.style) {\r\n                    decodedStyle[decodeStyle(s)] = this.props.data.style[s];\r\n                }\r\n                let styleProgressBar = {backgroundColor: decodedStyle.maincolor, width:decodedStyle.progress+'%'};\r\n                let progressBarCode = <div style={styleProgressBar}></div>;\r\n                let styleProgressBg = {backgroundColor: decodedStyle.addcolor, width:(100-decodedStyle.progress)+'%'};\r\n                let progressBgCode = <div style={styleProgressBg}></div>;\r\n                elementCode = <div className={className} style={style} data-elem={true} onClick={this.onClick}>\r\n                                {progressBarCode}\r\n                                {progressBgCode}\r\n                              </div>;\r\n                break;\r\n            case 'dots-row':\r\n                decodedStyle = {};\r\n                for (let s in this.props.data.style) {\r\n                    decodedStyle[decodeStyle(s)] = this.props.data.style[s];\r\n                }\r\n                let styleMainDots = {backgroundColor: decodedStyle.maincolor, width:decodedStyle.radius + 'px', height:decodedStyle.radius + 'px', margin:'0 ' + decodedStyle.radius*0.5 + 'px', borderRadius: '50%'};\r\n                let mainDotsCode = Array.from({length: decodedStyle.maincount}, (v,i) => <div key={i} style={styleMainDots}></div>);\r\n                let styleAddDots = {...styleMainDots, backgroundColor: decodedStyle.addcolor};\r\n                let addDotsCode = Array.from({length: decodedStyle.addcount}, (v,i) => <div key={i} style={styleAddDots}></div>);\r\n                elementCode = <div className={className} style={style} data-elem={true} data-elem={true} onClick={this.onClick}>\r\n                                {mainDotsCode}\r\n                                {addDotsCode}\r\n                              </div>;\r\n                break;\r\n            case 'group':\r\n                let CvGroupElement = connect(mapStateToProps)(CvElement);\r\n                elementCode = <div className={className} style={style}>\r\n                                {this.props.data.elements.map( (e,i) => (\r\n                                    <CvGroupElement key={'' + (e.id?e.id:i)} id={'' + (e.id?e.id:i)} blockId={this.props.blockId} editable={this.props.editable} data={e} activeElementId={this.props.activeElementId}></CvGroupElement>\r\n                                ))}\r\n                              </div>;\r\n                break;\r\n            case 'link':\r\n                elementCode = <a className={className} style={style} href={this.props.data.href} suppressContentEditableWarning={this.props.editable} contentEditable={this.props.editable} data-elem={true} onClick={this.onClick} onBlur={this.onBlur}>\r\n                                {this.props.data.text}\r\n                                </a>;\r\n                break;\r\n            default:\r\n                elementCode = null;\r\n        }\r\n\r\n        if (this.props.data.link) {\r\n            let styleLink = {position:position, top:positionTop, left:positionLeft, width:this.props.data.width + 'px', height:this.props.data.height + 'px'};\r\n            return (\r\n                <a className='cv__element--link' href={this.props.data.link} style={styleLink}>\r\n                    {elementCode} \r\n                </a>\r\n            );\r\n        }\r\n        \r\n        return elementCode;        \r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        templateImageUrl: state.cvData.templateImageUrl,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CvElement);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CvElement from './CvElement';\r\n\r\nimport {connect} from 'react-redux';\r\nimport {cvBlock_add, templates_delete} from '../redux/cvDataAC';\r\nimport {getAutoSize} from './utils';\r\n\r\nclass TemplateBlock extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n        data: PropTypes.object.isRequired,\r\n        transitionClass: PropTypes.string,\r\n        custom: PropTypes.bool,\r\n    };\r\n\r\n    onClickAdd = (evt) => {\r\n        let sizesAuto = getAutoSize(evt.target.previousSibling);\r\n        let deepCopyBlock = JSON.parse(JSON.stringify(this.props.data));\r\n        this.props.dispatch(cvBlock_add({...deepCopyBlock, width:sizesAuto.width, height:sizesAuto.height}));\r\n    }\r\n\r\n    onClickDelete = (evt) => {\r\n        this.props.dispatch(templates_delete(this.props.id));\r\n    }\r\n\r\n    render () {\r\n        //console.log('render template block', this.props.id);\r\n        let elementCode = <CvElement key={'' + this.props.id} id={'' + this.props.id} blockId={this.props.id} cv={false} data={this.props.data} active={false}></CvElement>;\r\n        return (    \r\n            <li className={'template-panel__block ' + this.props.transitionClass}>\r\n                <div className='template-panel__block-view'>\r\n                    {elementCode}\r\n                </div>\r\n                <button className='template-panel__block-add' onClick={this.onClickAdd}></button>\r\n                {this.props.custom &&\r\n                    <button className='template-panel__button-delete' onClick={this.onClickDelete}></button>\r\n                }\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect()(TemplateBlock);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TemplateBlock from './TemplateBlock';\r\nimport {Transition} from \"react-transition-group\";\r\n\r\nclass TemplateGroup extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n        data: PropTypes.object.isRequired,\r\n        cbSelected: PropTypes.func.isRequired,\r\n        active: PropTypes.bool.isRequired,\r\n        custom: PropTypes.bool,\r\n    };\r\n\r\n    onClick = () => {\r\n        this.props.cbSelected(this.props.id);\r\n    }\r\n\r\n    render () {\r\n        \r\n        //console.log('render template grop', this.props.id);\r\n        return <li className={'template-panel__group' + (this.props.custom?' template-panel__group--user':'')}>\r\n                    <div className={'template-panel__group-name' +  (this.props.active?' template-panel__group-name--active':'')} onClick={this.onClick}>\r\n                        {this.props.data.name}\r\n                    </div>\r\n                    <ul>\r\n                        {this.props.data.elements.map( (e,i) => { \r\n                            return <Transition key={i} in={this.props.active} unmountOnExit timeout={{ enter: 50*(i+1), exit: 50*(i+1) }}>\r\n                                    {stateName => {\r\n                                        return <TemplateBlock key={i} id={i} data={e} custom={this.props.custom} transitionClass={stateName}/>\r\n                                    }}\r\n                                </Transition>\r\n                        })}\r\n                    </ul>\r\n                </li>;\r\n    }\r\n}\r\n\r\nexport default TemplateGroup;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TemplateGroup from './TemplateGroup';\r\n\r\nimport {connect} from 'react-redux';\r\n\r\nclass TemplatePanel extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        transitionClass: PropTypes.string,\r\n        templates: PropTypes.array,\r\n        templatesUser: PropTypes.array,\r\n    };\r\n\r\n    state = {\r\n        activeMenuId: null,\r\n    }\r\n\r\n    selectMenu = (id) => {\r\n        this.setState( {activeMenuId:(id===this.state.activeMenuId)?null:id} );\r\n    }\r\n\r\n    render () {\r\n        let isTemplatesUser = this.props.templatesUser?this.props.templatesUser.length>0:false;\r\n        //console.log('render template panel',this.props);\r\n        var groupsCode = this.props.templates.map( (g,i) => {\r\n            return <TemplateGroup key={i} id={i} data={g} active={(this.state.activeMenuId===i)?true:false} cbSelected={this.selectMenu}/>\r\n            });\r\n        return <ul className={'template-panel__menu ' + this.props.transitionClass}>\r\n                    {groupsCode}\r\n                    {isTemplatesUser &&\r\n                        <TemplateGroup key={groupsCode.length+1} id={groupsCode.length+1} data={{name:'Your templates',elements:this.props.templatesUser}} custom={true} active={(this.state.activeMenuId===(groupsCode.length+1))?true:false} cbSelected={this.selectMenu}/>\r\n                    }\r\n                    \r\n               </ul>\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        templates: state.cvData.templates,\r\n        templatesUser: state.cvData.templatesUser,\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps)(TemplatePanel);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Transition} from \"react-transition-group\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport CvElement from './CvElement';\r\n\r\nimport {cvBlock_activate, cvBlock_activateMulti} from '../redux/cvDataAC';\r\n\r\n\r\nclass CvBlock extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        id: PropTypes.number.isRequired,\r\n        data: PropTypes.object.isRequired,\r\n        activeIndex: PropTypes.number,        \r\n        activeElementId: PropTypes.string,\r\n        editable: PropTypes.bool,\r\n        newBlock: PropTypes.bool,\r\n    };\r\n\r\n    blockRef = React.createRef();\r\n\r\n    componentDidMount() {\r\n        if (this.props.newBlock) {\r\n            this.props.dispatch(cvBlock_activate(this.props.id, this.blockRef.current));\r\n        }\r\n    }\r\n\r\n    onClick = (evt) => {\r\n        if (evt.ctrlKey || evt.shiftKey) {\r\n            evt.preventDefault();\r\n            this.props.dispatch(cvBlock_activateMulti(this.props.id));\r\n        } else {\r\n            let activatedElement = evt.target.getAttribute('data-elem');\r\n            evt.preventDefault();\r\n            this.props.dispatch(cvBlock_activate(this.props.id, evt.currentTarget, activatedElement));\r\n        }\r\n    }\r\n\r\n    render () {\r\n        //console.log('render block',this.props.transitionClass);\r\n        let style = {top:this.props.data.positionTop + 'px', left:this.props.data.positionLeft + 'px', width:this.props.data.width + 'px', height:this.props.data.height + 'px'};\r\n        let className = 'cv__block' + ((this.props.activeIndex>=0)?' cv__block--active':'')\r\n                        + ((this.props.activeIndex===0)?' cv__block--active-first':'')\r\n                        + (this.props.data.lock?' cv__block--lock':'');\r\n        let elementCode = <CvElement id={'' + this.props.id} blockId={this.props.id} editable={this.props.editable} data={this.props.data} activeElementId={this.props.activeElementId}></CvElement>;\r\n\r\n        return (\r\n            <Transition in={true} unmountOnExit timeout={{ enter: 1000, exit: 1000 }}>\r\n                {stateName => {\r\n                    return <div className={className + ' ' + stateName} style={style} onClick={this.onClick} ref={this.blockRef}>\r\n                    {elementCode} \r\n                </div>\r\n            }}\r\n        </Transition>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        newBlock: state.cvData.newBlock,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CvBlock);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {cvBlock_move, cvBlock_resize, cvBlock_delete} from '../redux/cvDataAC';\r\n\r\n\r\nclass Transform extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        block: PropTypes.object,\r\n        cv: PropTypes.object,\r\n        transitionClass: PropTypes.string,\r\n    };\r\n\r\n    mouseStart;\r\n    mouseShift;\r\n    elem;\r\n    resize = false;\r\n    \r\n    state = {\r\n        shiftTop: this.props.cv.offsetTop,\r\n        shiftLeft: this.props.cv.offsetLeft,\r\n        shiftBorder : 4,\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener(\"resize\", this.setPosition);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"resize\", this.setPosition);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.setPosition();\r\n    }\r\n\r\n    setPosition = () => {\r\n        this.setState({shiftTop: this.props.cv.offsetTop, shiftLeft: this.props.cv.offsetLeft});\r\n    }\r\n\r\n    move = (evt) => { \r\n        evt.preventDefault();\r\n        this.mouseStart = {\r\n            x: evt.clientX,\r\n            y: evt.clientY\r\n        };\r\n        this.elem = evt.currentTarget.parentNode;\r\n        document.addEventListener('mousemove', this.onMouseMove);\r\n        document.addEventListener('mouseup', this.onMouseUp);\r\n    }\r\n\r\n    onMouseMove = (moveEvt) => {\r\n        moveEvt.preventDefault();\r\n        this.mouseShift = {\r\n            x: moveEvt.clientX - this.mouseStart.x,\r\n            y: moveEvt.clientY - this.mouseStart.y \r\n        };\r\n        this.mouseStart = {\r\n            x: moveEvt.clientX,\r\n            y: moveEvt.clientY\r\n        };\r\n        \r\n        if (this.resize) {\r\n            this.props.dispatch(cvBlock_resize(this.props.block.id,this.mouseShift.y,this.mouseShift.x));\r\n        } else {\r\n            this.props.dispatch(cvBlock_move(this.props.block.id,this.mouseShift.y,this.mouseShift.x));\r\n        }\r\n    }\r\n\r\n    onMouseUp = (upEvt) => {\r\n        upEvt.preventDefault();\r\n        document.removeEventListener('mousemove', this.onMouseMove);\r\n        document.removeEventListener('mouseup', this.onMouseUp);\r\n    }\r\n\r\n    onMouseDown = (evt) => {\r\n        this.resize = false;\r\n        this.move(evt);\r\n    }\r\n\r\n    onMouseDownSize = (evt) => {\r\n        this.resize = true;\r\n        this.move(evt);\r\n    }\r\n\r\n    onClickDelete = () => {\r\n        this.props.dispatch(cvBlock_delete(this.props.block.id));\r\n    }\r\n\r\n    render () {\r\n        //console.log('render transform');\r\n        if (!this.props.block) {\r\n            return null;\r\n        }\r\n        //let style = {top:(this.props.block.positionTop + this.shiftTop - this.shiftBorder) + 'px', left:(this.props.block.positionLeft + this.shiftLeft - this.shiftBorder) + 'px', width:(this.props.block.width + this.shiftBorder*2) + 'px', height:(this.props.block.height + this.shiftBorder*2) + 'px'};\r\n        let style = {top:(this.props.block.positionTop + this.state.shiftTop - this.state.shiftBorder) + 'px', left:(this.props.block.positionLeft + this.state.shiftLeft - this.state.shiftBorder) + 'px', width:(this.props.block.width + this.state.shiftBorder*2) + 'px', height:(this.props.block.height + this.state.shiftBorder*2) + 'px'};\r\n        let className = 'transform '  + this.props.transitionClass + (this.props.block.lock?' transform--locked':'') + (this.props.block.link?' transform--linked':'');\r\n        return (\r\n            <div className={className} style={style}>\r\n                {!this.props.block.lock && (\r\n                    <React.Fragment>\r\n                        <button className='transform__button transform__button--move' onMouseDown={this.onMouseDown}></button>\r\n                        <button className='transform__button transform__button--delete' onClick={this.onClickDelete}></button>\r\n                        <button className='transform__button transform__button--resize' onMouseDown={this.onMouseDownSize}></button>\r\n                    </React.Fragment>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        //show: state.cvData.showPanel,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Transform);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Transition} from \"react-transition-group\";\r\nimport {connect} from 'react-redux';\r\n\r\nimport CvBlock from './CvBlock';\r\nimport Transform from './Transform';\r\n\r\nimport {cvBlock_activate} from '../redux/cvDataAC';\r\nimport {createStyle} from './utils';\r\n\r\nclass CvDocument extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        blocks: PropTypes.array,\r\n        activeBlock: PropTypes.object,\r\n        activeBlocksId: PropTypes.array,\r\n        showPanel: PropTypes.bool,\r\n        stylePage: PropTypes.object,\r\n    };\r\n\r\n    onClick = (evt) => {\r\n        if (evt.target === evt.currentTarget) {\r\n            this.props.dispatch(cvBlock_activate(null,null));\r\n        };\r\n    }\r\n\r\n    render () {\r\n        //console.log('render cv-doc', this.props.blocks);\r\n        let cvBlocksCode = this.props.blocks.map( b => {\r\n            let activeIndex = this.props.activeBlocksId.findIndex(ab => ab===b.id);\r\n            return <CvBlock key={b.id} id={b.id} data={b} activeIndex={activeIndex} activeElementId={activeIndex>=0?this.props.activeElementId:null} editable={true}></CvBlock>\r\n        });\r\n        \r\n        return (\r\n            <div className='cv-container'>\r\n                {(this.props.activeBlock && this.cv) && (\r\n                    <Transition in={this.props.showPanel} timeout={{ enter: 1000, exit: 1000 }}>\r\n                        {stateName => {\r\n                            return <Transform block={this.props.activeBlock} cv={this.cv} transitionClass={stateName}/>\r\n                        }}\r\n                    </Transition>\r\n                )}\r\n                <div className='cv' style={createStyle(this.props.stylePage)} onClick={this.onClick} ref={(f) => this.cv = f}>\r\n                    {cvBlocksCode}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        blocks: state.cvData.blocks,\r\n        activeBlocksId: state.cvData.activeBlocksId,\r\n        activeElementId: state.cvData.activeElementId\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps)(CvDocument);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Loader extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        text: PropTypes.string,\r\n        transitionClass: PropTypes.string,\r\n    };\r\n\r\n    render() {\r\n        return <div className={'loader ' + this.props.transitionClass }>\r\n                    <span className='loader__text'>{this.props.text}</span>\r\n                    <i className='loader__layer loader__layer--1'></i>\r\n                    <i className='loader__layer loader__layer--2'></i>\r\n                    <i className='loader__layer loader__layer--3'></i>\r\n                </div>;    \r\n    }\r\n\r\n}\r\n\r\nexport default Loader;\r\n","export default __webpack_public_path__ + \"static/media/image.51674aa9.svg\";","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {cv_init} from '../redux/cvDataAC';\r\nimport imageUrl from '../img/image.svg';\r\nimport {loadFromLocalStorage, codeStyle} from './utils';\r\n\r\nimport Loader from './Loader';\r\nimport {Transition} from \"react-transition-group\";\r\nimport firebase from '@firebase/app';\r\nimport '@firebase/firestore';\r\nimport '@firebase/storage';\r\n\r\nlet firebaseConfig = {\r\n    apiKey: 'AIzaSyAq9TFZvy9lyxxV3vrJXGXT5M_Ivwf7-RY',\r\n    authDomain: 'creacv-a2bd7.firebaseapp.com',\r\n    projectId: 'creacv-a2bd7',\r\n    storageBucket: 'creacv-a2bd7.appspot.com',\r\n    messagingSenderId: '1093581926352',\r\n    appId: '1:1093581926352:web:7d1b8619531df14b8253d5',\r\n    measurementId: 'G-08QQHJN47T'\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nlet db = firebase.firestore();\r\n\r\n//save doc in firebase\r\nfunction saveFirebase(collectionName,docName,data) {\r\n    db.collection(collectionName).doc(docName).set(data)\r\n        .then(() => {\r\n            //console.log(\"Document successfully written!\");\r\n        })\r\n        .catch((error) => {\r\n            //console.error(\"Error writing document: \", error);\r\n        });\r\n}\r\n\r\n//add in doc in firebase\r\nasync function addFirebase(collectionName,docName,data,resolve) {\r\n    db.collection(collectionName).doc(docName).get().then((doc) => {\r\n        if (doc.exists) {\r\n            db.collection(collectionName).doc(docName).set({\r\n                [data]: true\r\n            }, { merge: true }).then(() => {\r\n                resolve();\r\n            });\r\n        } else {\r\n            //console.log(\"No such document!\");\r\n            }\r\n        }).catch((error) => {\r\n            //console.log(\"Error getting document:\", error);\r\n        });\r\n}\r\n\r\n//load from firebase\r\nasync function loadFirebase(collectionName,docName,resolve) {\r\n    db.collection(collectionName).doc(docName).get().then((doc) => {\r\n        if (doc.exists) {\r\n            //console.log(\"Document data:\", doc.data());\r\n                resolve(doc.data());\r\n            } else {\r\n                resolve(false);\r\n            }\r\n        }).catch((error) => {\r\n            //console.log(\"Error getting document:\", error);\r\n        });\r\n}\r\n\r\n//временно!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\nfunction saveTemplates() {\r\n    function createTemplates() {\r\n\r\n        let textStyleDefault = {font:'Roboto', color:'#000000', fontsize:'16',\r\n                                bold:false, italic:false, center:false,\r\n                                uppercase:false, underline:false, padding:{left:1,right:0,top:0,bottom:0}};\r\n    \r\n        let imagesArr = [\r\n            {type:'image', style:{file:'', opacity:1}},\r\n            {type:'image', style:{file:'', opacity:1, borderRadius:'50%'}},\r\n            {type:'image', style:{file:'', opacity:1, bordercolor: '#E05B49', borderwidth: '3', borderStyle: 'solid'}},\r\n            {type:'image', style:{file:'', opacity:1, borderRadius:'50%', bordercolor: '#E05B49', borderwidth: '3', borderStyle: 'solid'}},\r\n        ];\r\n    \r\n        let textArr = [\r\n            {type:'text', text:'Text simple', style:{...textStyleDefault, fontsize: '20'}},\r\n            {type:'text', text:'Text with background', style:{bgcolor:'#8e9fa0',...textStyleDefault, fontsize:'14'}},\r\n            {type:'text', text:'Big text', style:{...textStyleDefault, fontsize: '40', bold:true}},\r\n            {type:'group', elements:[\r\n                {type:'text', text:'Your header', style:{...textStyleDefault, fontsize:'20', bold:true}},\r\n                {type:'text', text:'your text', style:{...textStyleDefault}}\r\n            ]},\r\n        ];\r\n        \r\n        let textBlockArr = [\r\n            {type:'group', elements:[\r\n                {type:'text', text:'Your position', style:{...textStyleDefault, fontsize:'18', bold:true}},\r\n                {type:'text', text:'Company', style:{...textStyleDefault, fontsize:'18'}},\r\n                {type:'text', text:'period', style:{...textStyleDefault,italic:true}},\r\n                {type:'text', text:'your competencies and results', style:{...textStyleDefault}}\r\n            ]},\r\n        ];\r\n    \r\n        let figuresArr = [\r\n            {type:'figure', style:{bgcolor:'#E05B49', opacity:1}},\r\n            {type:'figure', style:{bgcolor:'#6AABB5', opacity:1, borderRadius:'50%'}},\r\n        ];\r\n        \r\n        let progressArr = [\r\n            /*{type:'group', direction:'row', elements:[\r\n                {type:'text', text:'skill in dots', style:{...textStyleDefault}},\r\n                {type:'dots-row', style:{maincolor:'#E05B49', addcolor:'#E6E6E6', radius:10, maincount:3, addcount: 2}},\r\n            ]},\r\n            {type:'group', direction:'row', elements:[\r\n                {type:'text', text:'skill in progress', style:{...textStyleDefault}},\r\n                {type:'progress', style:{maincolor:'#E05B49', addcolor:'#E6E6E6', progress:50}},\r\n            ]},\r\n            {type:'group', direction:'column', elements:[\r\n                {type:'text', text:'skill in progress', style:{...textStyleDefault}},\r\n                {type:'progress', style:{maincolor:'#E05B49', addcolor:'#E6E6E6', progress:50}},\r\n            ]},*/\r\n            {type:'dots-row', style:{maincolor:'#E05B49', addcolor:'#E6E6E6', radius:10, maincount:5, addcount: 3}},\r\n            {type:'progress', style:{maincolor:'#E05B49', addcolor:'#E6E6E6', progress:50}}\r\n        ];\r\n    \r\n        /*let iconsArr = [\r\n            {type:'image', style:{file:icon, opacity:1}},\r\n        ];*/\r\n    \r\n        let templatesArr = [\r\n            {name: 'Image', elements:imagesArr},\r\n            {name: 'Text', elements:textArr},\r\n            {name: 'Info block', elements:textBlockArr},\r\n            {name: 'Figure', elements:figuresArr},\r\n            {name: 'Progress', elements:progressArr},\r\n            //{name: 'Icons', elements:iconsArr},\r\n        ];\r\n    \r\n        return templatesArr;\r\n    }\r\n\r\n    function codeStyle(block) {\r\n        let newBlock = {...block};\r\n        if (block.style) {\r\n            let newStyle = {};\r\n            let styleIndex = 0;\r\n            for (let key in block.style) {\r\n                newStyle['s0' + styleIndex + '_' + key] = block.style[key];\r\n                styleIndex++;\r\n            }\r\n            newBlock.style = newStyle;\r\n        }\r\n        //block.style[action.styleName] = action.styleValue;\r\n        //block.style = {...block.style};\r\n        if (block.elements) {\r\n            let newElements = block.elements.map(e => codeStyle(e));\r\n            newBlock.elements = newElements;\r\n    \r\n            return newBlock;\r\n        }\r\n        return newBlock;\r\n    }\r\n    \r\n    let templatesArr = createTemplates();\r\n    let templatesArrConverted = templatesArr.map(t => codeStyle(t));\r\n    saveFirebase('Data','templates',{templates:templatesArrConverted});\r\n}\r\n\r\nlet withDataLoad = (propName) => Component => {\r\n\r\n    class ComponentWithDataLoad extends React.PureComponent {\r\n\r\n        componentDidMount() {\r\n            //saveTemplates();\r\n            this.loadData();\r\n        }\r\n\r\n        state = {\r\n            dataReady: false, // готовы ли данные\r\n            combinedProps: null, // исходные пропсы, переданные HOC-у, плюс пропс propName с загруженными данными\r\n        };\r\n        \r\n        loadData = async () => {\r\n            let user;\r\n            let link;\r\n            let blocks = [];\r\n            let style;\r\n            let templatesData = {};\r\n            let templatesUser = [];\r\n            \r\n            //local storage\r\n            var loadLS= new Promise( (resolve) => {\r\n                var lsData = loadFromLocalStorage('CV');\r\n                resolve(lsData);\r\n            });\r\n            await loadLS.then((data) => {\r\n                if (data) {\r\n                    blocks = data.blocks;\r\n                    style = data.style;\r\n                    user = data.user;\r\n                    link = data.link;\r\n                } \r\n            });\r\n\r\n            //templates\r\n            let loadTemplates = new Promise((resolve) => {\r\n                loadFirebase('Data','templates',resolve);\r\n            });\r\n            await loadTemplates.then((data) => {\r\n                if (data) {\r\n                    //debugger\r\n                    //templatesData.templates = data.templates.map(t => decodeStyle(t));\r\n                    templatesData.templates = data.templates;\r\n                    templatesData.image = imageUrl;\r\n                   \r\n                }\r\n            });\r\n\r\n            //user templates\r\n            if (user) {\r\n                let loadUserTemplates = new Promise((resolve) => {\r\n                    loadFirebase('Templates',user,resolve);\r\n                });\r\n                await loadUserTemplates.then((data) => {\r\n                    if (data) {\r\n                        templatesUser = data.templates;  \r\n                    }\r\n                });\r\n            }\r\n            \r\n            this.props.dispatch(cv_init(blocks,style,user,link,templatesData,templatesUser));\r\n            setTimeout( () => this.setState({dataReady:true,combinedProps:{...this.props,[propName]:''}}), 500);\r\n        }\r\n\r\n        render() {\r\n            if (!this.state.dataReady) {\r\n                return <Transition in={true} unmountOnExit timeout={{ enter: 1000, exit: 1000 }}>\r\n                    {stateName => {\r\n                        return <Loader transitionClass={stateName} text={'Loaded'}/>\r\n                    }}\r\n                </Transition>;\r\n            }\r\n            return <Component {...this.state.combinedProps} /> ;\r\n        } \r\n    }\r\n    return connect()(ComponentWithDataLoad);\r\n}\r\n\r\nexport { withDataLoad, saveFirebase, loadFirebase, addFirebase};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Loader from './Loader';\r\nimport {Transition} from \"react-transition-group\";\r\n\r\nimport {cv_setUser} from '../redux/cvDataAC';\r\nimport {addFirebase, loadFirebase} from './withDataLoad';\r\nimport {saveLocalStorage} from './utils';\r\n\r\nclass CvLogin extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        transitionClass: PropTypes.string,\r\n    };\r\n\r\n    state = {\r\n        userName: null,\r\n        userList: {},\r\n        dataloaded: false,\r\n        userNameValid: true,\r\n        messageError: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadData();\r\n    }\r\n\r\n    loadData = async () => {\r\n        let loadData = new Promise((resolve) => {\r\n            loadFirebase('Data','users',resolve);\r\n        });\r\n        await loadData.then((data) => {\r\n            this.setState({dataloaded:true,userList:data})\r\n        });\r\n    }\r\n\r\n    saveData = async (data) => {\r\n        let addData = new Promise((resolve) => {\r\n            addFirebase('Data','users',data,resolve);\r\n        });\r\n        await addData.then(() => {\r\n            this.setState({userNameValid:true,messageError:''});\r\n            saveLocalStorage('CV',{user:data});\r\n            this.props.dispatch(cv_setUser(data));\r\n        });    \r\n    }\r\n\r\n    onSubmit = (evt) => {\r\n        evt.preventDefault();\r\n        let nameValue = this.name.value;\r\n        if (String(nameValue).trim().length===0) {\r\n            this.setState({userNameValid:false,messageError:'Enter name'});\r\n            this.name.focus();\r\n            return;\r\n        } else if (nameValue in this.state.userList) {\r\n            this.setState({userNameValid:false,messageError:'This name is not available'});\r\n            this.name.focus();\r\n        } else {\r\n            this.saveData(this.name.value);\r\n        }\r\n    }\r\n\r\n    onChange = (evt) => {\r\n        let nameValue = this.name.value;\r\n        if (String(nameValue).trim().length>0) {\r\n            this.setState({userNameValid:true,messageError:''});\r\n            evt.preventDefault();\r\n            return;\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        if (!this.state.dataloaded) {\r\n            <Transition in={this.state.dataReady} unmountOnExit timeout={{ enter: 1000, exit: 1000 }}>\r\n                {stateName => {\r\n                    return <Loader transitionClass={stateName} text={'Loaded'}/>\r\n                }}\r\n            </Transition>;\r\n        }\r\n        return  <form className={\"cv__login \"  + this.props.transitionClass + (this.state.userNameValid?'':' cv__login--error')} name=\"login\" onSubmit={this.onSubmit}>\r\n                    <input type=\"text\" name=\"name\" maxLength=\"30\" placeholder=\"Enter name of your CV...\" ref={(f) => this.name = f} onChange={this.onChange}/>\r\n                    <button type='submit'/>\r\n                    {(!this.state.userNameValid) &&    \r\n                        <span>{this.state.messageError}</span>\r\n                    }\r\n                </form>    \r\n    }\r\n}\r\n  \r\nexport default connect()(CvLogin);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {Transition} from \"react-transition-group\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nimport OptionPanel from './OptionPanel';\r\nimport TemplatePanel from './TemplatePanel';\r\nimport CvDocument from './CvDocument';\r\nimport CvLogin from './CvLogin';\r\n\r\nimport {saveFileJSON, readFileJSON, saveLocalStorage} from './utils';\r\nimport {cv_load} from '../redux/cvDataAC';\r\n\r\n\r\nclass CV extends React.PureComponent {\r\n    \r\n    static propTypes = {\r\n        transitionClass: PropTypes.string,\r\n        stylePage: PropTypes.object,  \r\n        blocks: PropTypes.array,\r\n        activeBlocksId: PropTypes.array,\r\n        user: PropTypes.string,\r\n    };\r\n\r\n    state = {\r\n        showPanel: true,\r\n    }\r\n\r\n    saveCV = () => {\r\n        let stateToSave = {style:this.props.stylePage,blocks:this.props.blocks};\r\n        saveFileJSON(stateToSave,'CV','.json');\r\n        saveLocalStorage('CV',stateToSave);\r\n    }\r\n\r\n    saveLS = () => {\r\n        let stateToSave = {style:this.props.stylePage,blocks:this.props.blocks};\r\n        saveLocalStorage('CV',stateToSave);\r\n    } \r\n\r\n    loadCV = async(evt) => {\r\n        let data = await readFileJSON(evt.target.files[0]);\r\n        this.props.dispatch(cv_load(data.blocks,data.style));\r\n        saveLocalStorage('CV',{style:data.style,blocks:data.blocks});\r\n        evt.target.value = null;\r\n    }\r\n\r\n    /*showHTML = () => {\r\n        let cvBlock = document.querySelector('.cv');\r\n        let cvStyle = document.getElementsByTagName('style')[0];\r\n        let styleTag = document.createElement('style');\r\n        styleTag.setAttribute('type','text/css');\r\n        if (styleTag.styleSheet){\r\n            styleTag.styleSheet.cssText = cvStyle.innerHTML;\r\n        } else {\r\n        styleTag.appendChild(document.createTextNode(cvStyle.innerHTML));\r\n        }\r\n        \r\n        var windowCV = window.open('', 'wnd');\r\n        let headTag = windowCV.document.head;\r\n        headTag.appendChild(styleTag);\r\n        windowCV.document.body.innerHTML = cvBlock.outerHTML;\r\n        windowCV.document.body.style.overflow = 'auto';\r\n        windowCV.document.body.style.height = 'auto';\r\n    }*/\r\n\r\n    showPanel = () => {\r\n        this.setState({showPanel:!this.state.showPanel});\r\n    }\r\n    \r\n    render () {\r\n        console.log('render cv');\r\n        if (!this.props.user) {\r\n            return <Transition in={!this.props.user} unmountOnExit timeout={{ enter: 1000, exit: 1000 }}>\r\n                        {stateName => {\r\n                            return <CvLogin transitionClass={stateName}/>\r\n                        }}\r\n                    </Transition>;    \r\n        }\r\n        let activeOneId = (this.props.activeBlocksId.length===1) && this.props.activeBlocksId[0];\r\n        let activeBlock = null;\r\n        let activeBlockOptions;\r\n        if (activeOneId) {\r\n            activeBlock = this.props.blocks.find(b => b.id === activeOneId);\r\n            activeBlockOptions = {id:activeBlock.id,\r\n                                lock: activeBlock.lock,\r\n                                link:activeBlock.link,\r\n                                list:activeBlock.list,\r\n                                group:activeBlock.group,\r\n                            };\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <header className={'header ' + this.props.transitionClass}>\r\n                    <span className='header__logo'>Create your CV</span>\r\n                    <ul className='header__menu'>\r\n                        <li className='header__menu-item'>\r\n                            <button className='header__button header__button--save' onClick={this.saveCV}>Save</button>\r\n                        </li>\r\n                        <li className='header__menu-item'>\r\n                            <input type='file' name='file-cv' id='file-cv' className='option__file' accept='text/*' onChange={this.loadCV}></input>\r\n                            <label className='header__button header__button--load' htmlFor='file-cv' data-tooltip={true}>Load</label>\r\n                        </li>\r\n                        <li className='header__menu-item'>\r\n                            <NavLink to='/view' className='header__button header__button--show' onClick={this.saveLS}>Show</NavLink>    \r\n                        </li>\r\n                    </ul>\r\n                </header>\r\n                <main className={'main ' + this.props.transitionClass}>\r\n                    <div className='template-panel'>\r\n                        <Transition in={this.state.showPanel} unmountOnExit timeout={{ enter: 500, exit: 500 }}>\r\n                            {stateName => {\r\n                                return <TemplatePanel transitionClass={stateName}/>\r\n                            }}\r\n                        </Transition>\r\n                        {this.state.showPanel && null}\r\n                        <button className='template-panel__button-hide' onClick={this.showPanel}/>\r\n                    </div>\r\n                    <div className='desk'>\r\n                        <OptionPanel activeBlockOptions={activeBlockOptions}/>\r\n                        <CvDocument activeBlock={activeBlock} stylePage={this.props.stylePage} showPanel={this.state.showPanel}/>\r\n                    </div>\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        stylePage: state.cvData.stylePage,\r\n        blocks: state.cvData.blocks,\r\n        activeBlocksId: state.cvData.activeBlocksId,\r\n        user: state.cvData.user,\r\n    };\r\n};\r\n  \r\nexport default connect(mapStateToProps)(CV);\r\n","import React from 'react';\r\nimport {Transition} from \"react-transition-group\";\r\n\r\nimport CV from './../components/CV';\r\n\r\nclass Page_CV extends React.PureComponent {\r\n\r\n    render() {\r\n        return (\r\n           <Transition in={true} unmountOnExit timeout={{ enter: 500, exit: 500 }}>\r\n                {stateName => {\r\n                    return <CV transitionClass={stateName}/>\r\n                }}\r\n            </Transition>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default Page_CV;\r\n    ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router';\r\n\r\nimport {cv_setLink} from '../redux/cvDataAC';\r\n\r\nimport CvBlock from './CvBlock';\r\nimport {createStyle, saveLocalStorage} from './utils';\r\nimport {saveFirebase} from './withDataLoad';\r\n\r\nclass CvView extends React.PureComponent {\r\n\r\n    static propTypes = {\r\n        blocks: PropTypes.array,\r\n        stylePage: PropTypes.object,\r\n        user: PropTypes.string,\r\n        link: PropTypes.string,\r\n    };\r\n\r\n    state = {\r\n        viewForPrint: false,\r\n    }\r\n\r\n    viewForPrint = () => {\r\n        this.setState({viewForPrint:!this.state.viewForPrint});\r\n    }\r\n\r\n    createLink = async () => {\r\n        let linkName = this.props.user;\r\n        let stateToSave = {style:this.props.stylePage,blocks:this.props.blocks};\r\n        saveFirebase('Links',linkName,stateToSave,false);\r\n        saveLocalStorage('CV',{link:linkName});\r\n        this.props.dispatch(cv_setLink(linkName));\r\n    }\r\n\r\n    updateLink = async () => {\r\n        let linkName = this.props.user;\r\n        let stateToSave = {style:this.props.stylePage,blocks:this.props.blocks};\r\n        saveFirebase('Links',linkName,stateToSave,false);\r\n    }\r\n    \r\n    render () {\r\n        let cvBlocksCode = this.props.blocks.map( b => {\r\n            return <CvBlock key={b.id} id={b.id} data={b} editable={false}></CvBlock>\r\n        });\r\n\r\n        let linkCode;\r\n        if (this.props.link) {\r\n            linkCode = <React.Fragment>\r\n                            <li className='header__menu-item'>\r\n                                <button className='header__button header__button--link-update' onClick={this.updateLink}>Update link</button>\r\n                            </li>\r\n                            <li className='header__menu-item'>\r\n                                <NavLink to={'/' + this.props.link} className='header__button header__button--show' target=\"_blank\">Open link ({this.props.link})</NavLink>\r\n                            </li>\r\n                        </React.Fragment>\r\n        } else {\r\n            linkCode = <li className='header__menu-item'>\r\n                            <button className='header__button header__button--link-create' onClick={this.createLink}>Create Link</button>\r\n                        </li>\r\n        }\r\n\r\n        return (\r\n            <React.Fragment>\r\n                {!this.state.viewForPrint && (\r\n                    <header className={'header ' + this.props.transitionClass}>\r\n                        <ul className='header__menu'>\r\n                            <li className='header__menu-item'>\r\n                                <button className='header__button header__button--print' onClick={this.viewForPrint}>View for print</button>\r\n                            </li>\r\n                            <li className='header__menu-item'>\r\n                                <NavLink to='/' className='header__button header__button--edit'>Back to edit</NavLink>    \r\n                            </li>\r\n                            {linkCode}\r\n                        </ul>\r\n                    </header>\r\n                )}\r\n                <main className={'main ' + this.props.transitionClass}>\r\n                    {this.state.viewForPrint && (\r\n                        <div className='header__print no-print'>\r\n                            <span>You can save this page to PDF-file. Open a webpage in Chrome, press Ctrl+P to open the Print dialog and change the destination printer to “Save as PDF”. Hit the “Print” button and the webpage will download as a PDF document\r\n                            </span>\r\n                            <NavLink to='/' className='header__button header__button--edit'>Back to edit</NavLink>\r\n                        </div>\r\n                    )}\r\n                    <div className='cv-view'>\r\n                        <div className='cv' style={createStyle(this.props.stylePage)}>\r\n                            {cvBlocksCode}\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n    return {\r\n        blocks: state.cvData.blocks,\r\n        stylePage: state.cvData.stylePage,\r\n        user: state.cvData.user,\r\n        link: state.cvData.link,\r\n    };\r\n};\r\n  \r\nexport default withRouter((connect(mapStateToProps)(CvView)));\r\n","import React from 'react';\r\nimport {Transition} from \"react-transition-group\";\r\nimport CvView from './../components/CvView';\r\n\r\nclass Page_View extends React.PureComponent {\r\n      \r\n    render() {\r\n        return (\r\n            <Transition in={true} unmountOnExit timeout={{ enter: 500, exit: 500 }}>\r\n                {stateName => {\r\n                    return <CvView transitionClass={stateName}/>\r\n                }}\r\n            </Transition>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default Page_View;\r\n    ","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {withRouter} from 'react-router';\r\n\r\nimport CvBlock from './CvBlock';\r\nimport {createStyle} from './utils';\r\nimport {loadFirebase} from './withDataLoad';\r\n\r\nclass CvLink extends React.PureComponent {\r\n\r\n    state = {\r\n        blocks: [],\r\n        stylePage: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        let linkName = this.props.match.params.linkname;\r\n        if (linkName) {\r\n            this.loadLink(linkName);\r\n        }\r\n    }\r\n\r\n    loadLink = async (linkName) => {\r\n        let loadTemplates = new Promise((resolve) => {\r\n            loadFirebase('Links',linkName,resolve);\r\n        });\r\n        await loadTemplates.then((data) => {\r\n            this.setState({blocks:data.blocks,stylePage:data.style});\r\n        });\r\n    }\r\n    \r\n    render () {\r\n        if (!this.state.blocks) {\r\n            return null;\r\n        }\r\n        var cvBlocksCode = this.state.blocks.map( b => {\r\n            return <CvBlock key={b.id} id={b.id} data={b} editable={false}></CvBlock>\r\n        });\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <main className='main'>\r\n                    <div className='cv-view'>\r\n                        <div className='cv cv--link' style={createStyle(this.state.stylePage)}>\r\n                            {cvBlocksCode}\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n  \r\nexport default withRouter(CvLink);\r\n","import React from 'react';\r\n//import {Transition} from \"react-transition-group\";\r\nimport CvLink from './../components/CvLink';\r\n\r\nclass Page_Link extends React.PureComponent {\r\n      \r\n    render() {\r\n        return <CvLink/>\r\n    }\r\n}\r\n    \r\nexport default Page_Link;\r\n    ","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\n\r\nimport Page_CV from './Page_CV';\r\nimport Page_View from './Page_View';\r\nimport Page_Link from './Page_Link';\r\n\r\nclass PagesRouter extends React.Component {\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <React.Fragment>\r\n                <Route path='/' exact component={Page_CV}/>\r\n                <Route path='/view' component={Page_View}/>\r\n                <Route path=\"/:linkname\" component={Page_Link}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n    \r\nexport default PagesRouter;\r\n    ","import {codeStyle, CV_ID} from './../components/utils';\r\nimport {saveFirebase} from './../components/withDataLoad';\r\n\r\nimport { CV_BLOCK_ADD,\r\n        CV_BLOCK_DELETE,\r\n        CV_BLOCK_MOVE,\r\n        CV_BLOCK_RESIZE,\r\n        CV_BLOCK_ACTIVATE,\r\n        CV_BLOCK_ACTIVATE_MULTI,\r\n        CV_BLOCK_SEND_BACK,\r\n        CV_BLOCK_COPY,\r\n        CV_BLOCK_SET_SIZE,\r\n        CV_BLOCK_LOCK,\r\n        CV_BLOCK_LINK,\r\n        CV_BLOCKS_ALIGN_TOP,\r\n        CV_BLOCKS_ALIGN_BOTTOM,\r\n        CV_BLOCKS_ALIGN_LEFT,\r\n        CV_BLOCKS_ALIGN_RIGHT,\r\n        CV_BLOCKS_ALIGN_VERTICAL,\r\n        CV_BLOCKS_ALIGN_HORISONTAL,\r\n        CV_BLOCKS_DISTRIBUTE_VERTICAL,\r\n        CV_BLOCKS_DISTRIBUTE_HORISONTAL,\r\n        CV_BLOCKS_ALIGN_WIDTH,\r\n        CV_BLOCKS_ALIGN_HEIGHT,\r\n        CV_BLOCKS_GROUP,\r\n        CV_BLOCK_UNGROUP,\r\n        CV_ELEMENT_ACTIVATE,\r\n        CV_STYLE_UPDATE,\r\n        CV_TEXT_UPDATE,\r\n        CV_LOAD,\r\n        CV_INIT,\r\n        CV_SET_USER,\r\n        CV_SET_LINK,\r\n        TEMPLATE_ADD,\r\n        TEMPLATE_DELETE } from './cvDataAC';\r\n\r\nconst initState = {\r\n    user: null,\r\n    link: null,\r\n    stylePage: {bgcolor:'#ffffff'},\r\n    blocks: [],\r\n    activeBlockDOM: null,\r\n    activeBlocksId: [],\r\n    activeElementId: null,\r\n    styleToEdit: {},\r\n    showPanel: true,\r\n    newBlock: false,\r\n    templates: [],\r\n    templatesUser: [],\r\n    templateImageUrl: null,\r\n}\r\n\r\nfunction cvDataReducer(state = initState, action, cvId = CV_ID) {\r\n\r\n    switch (action.type) {\r\n\r\n        //add new block to cv-page\r\n        case CV_BLOCK_ADD: {\r\n            function setId(block,parentId,index = 0) {\r\n                if (!parentId) {\r\n                    block.id = newId;    \r\n                } else {\r\n                    block.id = parentId + '-' + index;\r\n                }\r\n                if (block.elements) {\r\n                    block.elements.forEach((e,i) => setId(e,block.id,i));\r\n                }\r\n            }\r\n\r\n            let newId = state.blocks.reduce(function (r, v) { return ( r < v.id ? v.id : r);},0) + 1;\r\n            let randomPosition = 50 + Math.random()*100;\r\n            let newBlock = {...action.block, positionTop:randomPosition,positionLeft:randomPosition};\r\n            setId(newBlock);\r\n            let newState = {...state,\r\n                blocks: [...state.blocks,newBlock],\r\n                activeBlocksId: [newId],\r\n                activeBlockDOM: null,\r\n                activeElementId: null,\r\n                newBlock: true,\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //delete block to cv-page\r\n        case CV_BLOCK_DELETE: {\r\n            let newState = {...state,\r\n                blocks: state.blocks.filter(b => b.id!==action.blockId),\r\n                activeBlocksId: [],\r\n                activeBlockDOM: null,\r\n                activeElementId: null,\r\n                newBlock: false,\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //move block on cv-page\r\n        case CV_BLOCK_MOVE: {\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (b.id === action.blockId) {\r\n                    b.positionTop = Number(b.positionTop) + action.shiftTop;\r\n                    b.positionLeft = Number(b.positionLeft) + action.shiftLeft;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state, \r\n                blocks:newBlocks,\r\n                newBlock: false,\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //set size for block on cv-page\r\n        case CV_BLOCK_RESIZE: {\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (b.id===action.blockId) {\r\n                    b.height = Number(b.height) + action.shiftHeight;    \r\n                    b.width = Number(b.width) + action.shiftWidth;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state,\r\n                blocks:newBlocks,\r\n                newBlock: false,\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //activate block on cv-page\r\n        case CV_BLOCK_ACTIVATE: {\r\n            console.log('activate block');\r\n            let newActiveBlocksId = [];\r\n            if (action.blockId) {\r\n                newActiveBlocksId.push(action.blockId);\r\n            }\r\n            let newState = {...state,\r\n                activeBlocksId:newActiveBlocksId,\r\n                activeBlockDOM:action.target, \r\n                activeElementId:(action.activeElem?state.activeElementId:null),\r\n                newBlock: false,\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //activate miltiple blocks on cv-page\r\n        case CV_BLOCK_ACTIVATE_MULTI: {\r\n            let newActiveBlocksId = [...state.activeBlocksId,action.blockId];\r\n            let newState = {...state,\r\n                activeBlocksId:newActiveBlocksId,\r\n                activeBlockDOM:null,\r\n                activeElementId:null,\r\n                newBlock: false,\r\n            }\r\n            return newState;\r\n        }\r\n\r\n        //align blocks on top\r\n        case CV_BLOCKS_ALIGN_TOP: {\r\n            let firstActiveBlock = state.blocks.find(b => b.id===state.activeBlocksId[0]);\r\n            let positionTop = firstActiveBlock.positionTop;\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (state.activeBlocksId.find(ab => b.id===ab)) {\r\n                    b.positionTop = positionTop;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state,\r\n                blocks:newBlocks\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //align blocks on bottom\r\n        case CV_BLOCKS_ALIGN_BOTTOM: {\r\n            let firstActiveBlock = state.blocks.find(b => b.id===state.activeBlocksId[0]);\r\n            let positionBottom = firstActiveBlock.positionTop + firstActiveBlock.height;\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (state.activeBlocksId.find(ab => b.id===ab)) {\r\n                    b.positionTop = positionBottom - b.height;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state,\r\n                blocks:newBlocks\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //align blocks on left\r\n        case CV_BLOCKS_ALIGN_LEFT: {\r\n            let firstActiveBlock = state.blocks.find(b => b.id===state.activeBlocksId[0]);\r\n            let positionLeft = firstActiveBlock.positionLeft;\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (state.activeBlocksId.find(ab => b.id===ab)) {\r\n                    b.positionLeft = positionLeft;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state, blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //align blocks on right\r\n        case CV_BLOCKS_ALIGN_RIGHT: {\r\n            let firstActiveBlock = state.blocks.find(b => b.id===state.activeBlocksId[0]);\r\n            let positionRight = firstActiveBlock.positionLeft + firstActiveBlock.width;\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (state.activeBlocksId.find(ab => b.id===ab)) {\r\n                    b.positionLeft = positionRight - b.width;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state, blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //align blocks on vertical\r\n        case CV_BLOCKS_ALIGN_VERTICAL: {\r\n            let firstActiveBlock = state.blocks.find(b => b.id===state.activeBlocksId[0]);\r\n            let positionCenter = firstActiveBlock.positionLeft + firstActiveBlock.width/2;\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (state.activeBlocksId.find(ab => b.id===ab)) {\r\n                    b.positionLeft = positionCenter - b.width/2;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state, blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //align blocks on horisontal\r\n        case CV_BLOCKS_ALIGN_HORISONTAL: {\r\n            let firstActiveBlock = state.blocks.find(b => b.id===state.activeBlocksId[0]);\r\n            let positionCenter = firstActiveBlock.positionTop + firstActiveBlock.height/2;\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (state.activeBlocksId.find(ab => b.id===ab)) {\r\n                    b.positionTop = positionCenter - b.height/2;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state, blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //align blocks on same width\r\n        case CV_BLOCKS_ALIGN_WIDTH: {\r\n            let firstActiveBlock = state.blocks.find(b => b.id===state.activeBlocksId[0]);\r\n            let width = firstActiveBlock.width;\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (state.activeBlocksId.find(ab => b.id===ab)) {\r\n                    b.width = width;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state, blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //align blocks on same height\r\n        case CV_BLOCKS_ALIGN_HEIGHT: {\r\n            let firstActiveBlock = state.blocks.find(b => b.id===state.activeBlocksId[0]);\r\n            let height = firstActiveBlock.height;\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (state.activeBlocksId.find(ab => b.id===ab)) {\r\n                    b.height = height;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state, blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //distribute blocks on vertical\r\n        case CV_BLOCKS_DISTRIBUTE_VERTICAL: {\r\n            let blocksToAlign = state.blocks.filter( b => state.activeBlocksId.find(ab => b.id===ab)).sort((a,b) => a.positionTop-b.positionTop);\r\n            let minTop = blocksToAlign[0].positionTop + blocksToAlign[0].height;\r\n            let maxTop = blocksToAlign[blocksToAlign.length-1].positionTop;\r\n            \r\n            blocksToAlign = blocksToAlign.slice(1,blocksToAlign.length-1);\r\n\r\n            let totalHeight = blocksToAlign.reduce((r,b) => r + b.height,0);\r\n            let distance = (maxTop-minTop-totalHeight)/(blocksToAlign.length+1);\r\n\r\n            blocksToAlign = blocksToAlign.map(b => {\r\n                b.positionTop = minTop + distance;\r\n                minTop = b.positionTop + b.height;\r\n                return b;\r\n            })\r\n                        \r\n            //console.log(totalHeight);\r\n            //console.log('min top',minTop);\r\n            //console.log('max top',maxTop);\r\n            //console.log('distance',distance);\r\n            \r\n            let newBlocks = state.blocks.map(b => {\r\n                let newBlock = blocksToAlign.find(ab => b.id===ab.id);\r\n                if (newBlock) {\r\n                    return {...newBlock};\r\n                }\r\n                return b});\r\n            let newState = {...state, blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //distribute blocks on horisontal\r\n        case CV_BLOCKS_DISTRIBUTE_HORISONTAL: {\r\n            let blocksToAlign = state.blocks.filter( b => state.activeBlocksId.find(ab => b.id===ab)).sort((a,b) => a.positionLeft-b.positionLeft);\r\n            let minLeft = blocksToAlign[0].positionLeft + blocksToAlign[0].width;\r\n            let maxLeft = blocksToAlign[blocksToAlign.length-1].positionLeft;\r\n\r\n            blocksToAlign = blocksToAlign.slice(1,blocksToAlign.length-1);\r\n\r\n            let totalWidth = blocksToAlign.reduce((r,b) => r + b.width,0);\r\n            let distance = (maxLeft-minLeft-totalWidth)/(blocksToAlign.length+1);\r\n\r\n            blocksToAlign = blocksToAlign.map(b => {\r\n                b.positionLeft = minLeft + distance;\r\n                minLeft = b.positionLeft + b.width;\r\n                return b;\r\n            })\r\n                        \r\n            //console.log(totalHeight);\r\n            //console.log('min top',minTop);\r\n            //console.log('max top',maxTop);\r\n            //console.log('distance',distance);\r\n            \r\n            let newBlocks = state.blocks.map(b => {\r\n                let newBlock = blocksToAlign.find(ab => b.id===ab.id);\r\n                if (newBlock) {\r\n                    return {...newBlock};\r\n                }\r\n                return b});\r\n            let newState = {...state, blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //group blocks\r\n        case CV_BLOCKS_GROUP: {\r\n            let blocksToGroup = state.blocks.filter( b => state.activeBlocksId.find(ab => b.id===ab));\r\n            let top = Infinity;\r\n            let bottom = 0;\r\n            let left = Infinity;\r\n            let right = 0;\r\n\r\n            blocksToGroup.forEach( b => {\r\n                top = (b.positionTop<top)?b.positionTop:top;\r\n                bottom = ((b.positionTop+b.height)>bottom)?(b.positionTop+b.height):bottom;\r\n                left = (b.positionLeft<left)?b.positionLeft:left;\r\n                right = ((b.positionLeft+b.width)>right)?(b.positionLeft+b.width):right;\r\n            });\r\n\r\n            let newElements = blocksToGroup.map( b => {\r\n                let elemWidth = b.width;\r\n                let elemHeight = b.height;\r\n                let elemTop = b.positionTop - top;\r\n                let elemLeft = b.positionLeft - left;\r\n                delete b.positionTop;\r\n                delete b.positionLeft;\r\n                return {...b, style:{...b.style, position:'absolute', width: elemWidth, height: elemHeight, top: elemTop, left: elemLeft}};\r\n            });\r\n\r\n            let newId = state.blocks.reduce(function (r, v) { return ( r < v.id ? v.id : r);},0) + 1;\r\n            let newGroupBlock = {type:'group', group:true, direction:'absolute', id:newId, height:(bottom-top), width:(right-left), positionTop:top, positionLeft:left};\r\n            newGroupBlock.elements = newElements;\r\n            let newBlocks = state.blocks.filter(b => !state.activeBlocksId.find(ab => b.id===ab));\r\n            let newState = {...state, \r\n                blocks:[...newBlocks,newGroupBlock],\r\n                activeBlocksId: [newId],\r\n                activeBlockDOM: null,\r\n                activeElementId: null\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //ungroup block\r\n        case CV_BLOCK_UNGROUP: {\r\n            let blockToUnGroup = state.blocks.find(b => b.id===action.blockId);\r\n            let top = blockToUnGroup.positionTop;\r\n            let left = blockToUnGroup.positionLeft;\r\n\r\n            let newBlocks = blockToUnGroup.elements.map( (b,i) => {\r\n                let newId = state.blocks.reduce(function (r, v) { return ( r < v.id ? v.id : r);},0) + 1 + i;\r\n                let positionTop = top + b.style.top;\r\n                let positionLeft = left + b.style.left;\r\n                delete b.style.top;\r\n                delete b.style.left;\r\n                delete b.style.width;\r\n                delete b.style.height;\r\n                delete b.style.position;\r\n                return {...b, id:newId, positionTop:positionTop, positionLeft:positionLeft};\r\n            });\r\n\r\n            let newState = {...state,\r\n                blocks: [...state.blocks.filter(b => b.id!==action.blockId),...newBlocks],\r\n                activeBlocksId: [],\r\n                activeBlockDOM: null,\r\n                activeElementId: null\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //send block on back of cv-page\r\n        case CV_BLOCK_SEND_BACK: {\r\n            let sortFunc = function(a,b) {  \r\n                return a.id === action.blockId ? -1 : b.id === action.blockId ? 1 : 0;  \r\n              }\r\n            let newBlocks = [...state.blocks].sort(sortFunc);\r\n            let newState = {...state, \r\n                blocks:newBlocks, \r\n                activeBlocksId: [],\r\n                activeBlockDOM:null,\r\n                activeElementId:null\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //copy block\r\n        case CV_BLOCK_COPY: {\r\n            function copyBlock(blockTemp,parentId,index = 0) {\r\n                let block = {...blockTemp, style:{...blockTemp.style}};\r\n                if (!parentId) {\r\n                    block.id = newId;    \r\n                } else {\r\n                    block.id = parentId + '-' + index;\r\n                }\r\n                if (block.elements) {\r\n                    block.elements = block.elements.map((e,i) => copyBlock(e,block.id,i));\r\n                }\r\n                return block;\r\n            };\r\n\r\n            let newId = state.blocks.reduce(function (r, v) { return ( r < v.id ? v.id : r);},0) + 1;\r\n            let activeBlock = state.blocks.find(b => b.id===action.blockId);\r\n            let newBlock = copyBlock(activeBlock);\r\n            newBlock.positionTop = activeBlock.positionTop + 30;\r\n            newBlock.positionLeft = activeBlock.positionLeft + 30; \r\n            let newState = {...state,\r\n                blocks: [...state.blocks,newBlock],\r\n                activeBlocksId: [newId],\r\n                activeBlockDOM:null,\r\n                activeElementId:null\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //set width and height to 'auto' to block\r\n        case CV_BLOCK_SET_SIZE: {\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (b.id===action.blockId) {\r\n                    b.height = Number(action.height);\r\n                    b.width = Number(action.width);\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state, blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //lock block position on cv-page\r\n        case CV_BLOCK_LOCK: {\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (b.id===action.blockId) {\r\n                    b.lock = !b.lock;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state, blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //wrap block with link\r\n        case CV_BLOCK_LINK: {\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (b.id===action.blockId) {\r\n                    b.link = action.linkValue;\r\n                    return {...b};\r\n                }\r\n                return b});\r\n            let newState = {...state, blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //activate element on cv-page\r\n        case CV_ELEMENT_ACTIVATE: {\r\n            console.log('activate element');\r\n            if (state.activeElementId !== action.elementId) {\r\n                let newState = {...state, activeElementId:action.elementId, styleToEdit:action.style};\r\n                return newState;\r\n            }\r\n            return state;\r\n        }\r\n\r\n        //update elements style\r\n        case CV_STYLE_UPDATE: {\r\n            function updateStyle(block) {\r\n                if (block.id==state.activeElementId) {\r\n                    block.style[action.styleName] = action.styleValue;\r\n                    block.style = {...block.style};\r\n                    newStyleToEdit = block.style;\r\n                    return {...block};\r\n                }\r\n                if (block.elements) {\r\n                    block.elements = block.elements.map(e => updateStyle(e));\r\n                    return {...block};\r\n                }\r\n                return block;\r\n            }\r\n            if (action.blockId===cvId) {\r\n                state.stylePage[action.styleName] = action.styleValue;\r\n                let newState = {...state,\r\n                    stylePage: {...state.stylePage},\r\n                };\r\n                return newState;\r\n            }\r\n            let newStyleToEdit = {};\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (b.id === action.blockId) {\r\n                    let newBlock = updateStyle(b);\r\n                    return newBlock;\r\n                }\r\n                return b});\r\n            let newState = {...state, \r\n                blocks:newBlocks,\r\n                styleToEdit:newStyleToEdit};\r\n            return newState;\r\n        }\r\n        \r\n        //update elements text\r\n        case CV_TEXT_UPDATE: {\r\n            function updateText(block) {\r\n                if (block.id == state.activeElementId) {\r\n                    block.text = action.textValue;\r\n                    return {...block};\r\n                }\r\n                if (block.elements) {\r\n                    block.elements = block.elements.map(e => updateText(e));\r\n                    return {...block};\r\n                }\r\n                return block;\r\n            }\r\n            //action.textValue = action.textValue.split(/\\n+/ig);\r\n            let newBlocks = state.blocks.map(b => {\r\n                if (b.id === action.blockId) {\r\n                    let newBlock = updateText(b);\r\n                    return newBlock;\r\n                }\r\n                return b});\r\n            let newState = {...state, \r\n                blocks:newBlocks};\r\n            return newState;\r\n        }\r\n\r\n        //load CV-doc from json\r\n        case CV_LOAD: {\r\n            let newState = {...state,\r\n                stylePage:action.style,\r\n                blocks:action.blocks,\r\n            };\r\n            return newState;\r\n        }\r\n\r\n         //initialize CV\r\n         case CV_INIT: {\r\n            let newState = {...state,\r\n                user:action.user,\r\n                templates:action.templatesData.templates,\r\n                templateImageUrl:action.templatesData.image,\r\n                templatesUser:action.templatesUser\r\n            };\r\n            if (action.style) {\r\n                newState.stylePage = action.style;\r\n            };\r\n            if (action.blocks) {\r\n                newState.blocks = action.blocks;\r\n            };\r\n            if (action.link) {\r\n                newState.link = action.link;\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //set user name\r\n        case CV_SET_USER: {\r\n            let newState = {...state,\r\n                user:action.user,\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //set link\r\n        case CV_SET_LINK: {\r\n            let newState = {...state,\r\n                link:action.link,\r\n            };\r\n            return newState;\r\n        }\r\n\r\n        //add template\r\n        case TEMPLATE_ADD: {\r\n            let activeBlock = state.blocks.find(b => b.id===action.blockId);\r\n            let newTemplateBlock = {type:activeBlock.type, style:{...activeBlock.style,height:activeBlock.height}};\r\n            if (activeBlock.text) {\r\n                newTemplateBlock.text = activeBlock.text;\r\n            }\r\n            if (activeBlock.elements) {\r\n                newTemplateBlock.elements = [...activeBlock.elements];\r\n            }\r\n            if (activeBlock.direction) {\r\n                newTemplateBlock.direction = activeBlock.direction;\r\n            }\r\n            if (activeBlock.group) {\r\n                newTemplateBlock.group = activeBlock.group;\r\n            }\r\n            \r\n            let newState = {...state, templatesUser:[...state.templatesUser,newTemplateBlock]};\r\n            //let templatesArrConverted = newState.templatesUser.map(t => codeStyle(t));\r\n            saveFirebase('Templates',state.user,{templates:newState.templatesUser});\r\n            return newState;\r\n        }\r\n\r\n        //delete template\r\n        case TEMPLATE_DELETE: {\r\n            let newState = {...state,\r\n                templatesUser: state.templatesUser.filter((t,i) => i!==action.index),\r\n            };\r\n            saveFirebase('Templates',state.user,{templates:newState.templatesUser});\r\n            return newState;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default cvDataReducer;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport cvDataReducer from \"./cvDataReducer\";\r\n\r\nlet combinedReducer=combineReducers({\r\n    cvData: cvDataReducer,\r\n});\r\n\r\nexport default combinedReducer;\r\n","import React from 'react';\r\nimport {Provider} from 'react-redux';\r\nimport {createStore} from 'redux';\r\nimport {BrowserRouter} from 'react-router-dom';\r\n\r\nimport PagesRouter from './pages/PagesRouter';\r\n\r\nimport combinedReducer from './redux/reducers.js';\r\nimport {withDataLoad} from './components/withDataLoad';\r\n\r\nimport './sass/style.scss';\r\n\r\nlet store = createStore(combinedReducer);\r\n\r\nfunction App() {\r\n\r\n    let PagesRouterWithData = withDataLoad()(PagesRouter);\r\n    return (\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Provider store={store}>\r\n                <PagesRouterWithData/>\r\n            </Provider>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(<App/>,document.getElementById('app'));\r\nreportWebVitals();\r\n"],"sourceRoot":""}